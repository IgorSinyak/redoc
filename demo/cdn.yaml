swagger: '2.0'
info:
  title: G-CORE LABS API
  version: 0.1.2
  description: "Welcome to G-Core Labs API documentation. <br>
<br>
The API documentation provides requests to manage services, user accounts and get statistics.
<br><br>
Our API has predictable, resource-oriented URLs and use HTTP response codes to indicate API errors. We use built-in HTTP features, such as HTTP authentication and HTTP terminology, which can be understood by HTTP clients. JSON will be returned in all responses from the API, including errors.
 <br><br>

<strong>Responses</strong>
 <br><br>
The API uses HTTP response codes to show success or failure of an API request. In general, 2xx codes indicate success, 4xx codes indicate an error that resulted from the provided information (e.g. a required parameter is missing or invalid, etc.), and codes in the 5xx range indicate an error connected with G-Core Labs servers.

<br><br>
<strong>Maximum Body Request</strong>
<br><br>
Maximum API body request size is 1MB.

<br><br>
<strong id='purge-calls-limiting'>Purge Calls Limiting</strong>
<br><br>
You can make 1 purge request per minute. One purge request is limited to 50 patterns. If you go over the rate limit, you will receive a message.

<br><br>
<strong>Methods</strong>
<br><br>
Use the PATCH method instead of PUT if you need to change one parameter.

<br><br><br>
<strong>HTTP Status Code Summary</strong>
<br>
    <table>
        <thead>
            <tr>
            <td><strong>Code</strong></td><td><strong>Descritption</strong></td>
            </tr>
        </thead>
        <tr>
            <td>2xx</td><td>OK &mdash; Request has been completed successfully.</td>
        </tr>
        <tr>
            <td>400</td><td>Bad Request &mdash; Required parameter is missing.</td>
        </tr>
        <tr>
            <td>401</td><td>Unauthorized &mdash; Provided credentials are invalid or your API token has expired.</td>
        </tr>
        <tr>
            <td>403</td><td>Forbidden &mdash; Access denied. You do not have enough rights.</td>
        </tr>
        <tr>
            <td>404</td><td>Not Found &mdash; Requested item doesn't exist.</td>
        </tr>
        <tr>
            <td>503</td><td>Service Unavailable &mdash; You have made a mistake in request parameters or service is currently unavailable.</td>
        </tr>
        <tr>
            <td>500 502 504</td><td>Server errors &mdash; Something went wrong on G-Core Labs's end.</td>
        </tr>
    </table>
"

host: api.gcdn.co

schemes:
  - https

tags:
  - name: Account
  - name: Users
  - name: Origins
  - name: Resources
  - name: Rules
  - name: Rule templates
  - name: SSL Certificates
  - name: Let's Encrypt
  - name: Raw Logs
  - name: Tools
  - name: Statistics
  - name: Origin Shielding

paths:

  /auth/signin:
    post:
      tags:
        - Account
      summary: Login (legacy)
      description: 'Log in to get access to your account and services.<br><br>
                    <a href="https://control.gcdn.co/#/signup">Sign up</a> for the control panel to get access to our API. All methods except for Login and Password Reset require an API Token in the Authorization header. An API token is a unique key that all users and applications should add to requests to interact with our service. You will get it while logging in. You can send a login request no more than 5 times per second.
                    <br><br>
                    <strong>Permission</strong>
                    <br><br>
                    In addition to authentication, the API checks if the role of the user is authorized to perform the requested action. For example, users with the role of User can only receive CDN Resource and Storage statistics. Read more on users roles.
                    <br><br>
                    <strong>Token Expiration</strong>
                    <br><br>
                    When you receive a token you will see its expiration date in UTC (e.g. "expire":"2017-03-17T00:12:52") . When it expires, the HTTP 401 response will be returned to all requests with this token.
                    '
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Login"
          description: "<strong>All parameters are required.</strong>"
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/LoginAnswer"
        400:
          description: 'You will receive one of the following messages in the answer from API:<br>
<hr>
<ul>
  <li><strong> {errors: ["Unable to log in with provided credentials."]}</strong> <br> Perhaps you’ve made a typo in your email or password. Check your credentials and try again.<br>OR<br>
You have not registered in our control panel. Sign up <a href="https://control.gcdn.co/#/signup">here</a>.</li>
<br>
  <li><strong> {message: "Not activated account."}</strong> <br> You should confirm your email to active account. Check your email box.</li>
</ul>
<hr>
All messages type &mdash; string.'

  /auth/jwt/login:
    post:
      tags:
        - Account
      summary: Login (new)
      description: 'Log in to get access to your account and services.<br><br>
                   <a href="https://control.gcdn.co/#/signup">Sign up</a> for the control panel to get access to our API. The majority of methods require an API token in the Authorization header. An API token is a unique key that all users and applications should add to requests to interact with our services. You will get it while logging in. You can send this request no more than 5 times per second.
                   <br><br>
                   <strong>Permission</strong>
                   <br><br>
                   In addition to authentication, the API checks if the role of the user is authorized to perform the requested action.
                   <br><br>
                   <strong>Token Expiration</strong>
                   <br><br>
                   The access token will expire in an hour, the refresh token — in 24 hours.
                   '
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Login"
          description: "<strong>All parameters are required.</strong>"
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/LoginAnswerJWT"

  /auth/jwt/refresh:
    post:
      tags:
        - Account
      summary: Refresh token
      description: 'Use this request to refresh your access token.
                    <br><br>
                    <strong>Token Expiration</strong>
                    <br><br>
                    The access token will expire in an hour, the refresh token — in 24 hours.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Refresh"
          description: "<strong>All parameters are required.</strong>"
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/LoginAnswerJWT"

  /clients/me:
    get:
      tags:
        - Account
      summary: Account Details
      description: "Get information about your profile, users and other account details."
      produces:
        - application/json
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/DetailsAnswer"
        401:
          description: 'You will receive one of the following messages in answer from API: <br> <hr>
<ul>
  <li><strong> {"message":"Authentication credentials were not provided."}</strong><br>  Perhaps you have forgot to specify an Authorization header in the request. Please check it and try again.
</li>
<br>
  <li><strong> {"message":"Signature has expired."}</strong> <br> Your token has expired. Get new token and try again.</li>
</ul>
<hr>
All messages type &mdash; string. '
      security:
        - Bearer: []


  /auth/password/forgot:
    post:
      tags:
        - Account
      summary: Password Recovery
      description: 'Recover your password in case you forgot it.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/RecoveryPasswordRequest"
      responses:
        200:
          description: 'Successful.<strong> <br>{"status": "sent"}; </strong> type &mdash; string. <br> Email with password recovery link was sent. Check your email box.'
        400:
          description: 'Sorry, we could not find an account with such an email. Look out for typos or try other emails if you have several.<br> If it does not help, contact us at support@gcore.lu.'
      security:
        - Bearer: []

  /users/{user_id}/password:
    put:
      tags:
        - Account
      summary: Password Change
      description: 'Reset your password.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
          #          format: integer
          description: A unique user ID in our control panel. User_ID can be received in the previous request.
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangePasswordRequest"
      responses:
        200:
          description: 'Your email has been successfully changed.'
        400:
          description: 'You will receive one of the following messages in answer from API: <br>
<hr>
<ul>
  <li><strong> {errors: {old: "Old password is incorrect"}}</strong> <br> Perhaps you have made a typo while entering your old password. Please check your credentials.
</li>
<br>
  <li><strong> {"errors":{"new":"New passwords do not match"}}</strong> <br> New passwords does not match. Perhaps you have made a typo. Check them and try again.</li>
</ul>
<hr>
All messages type &mdash; string.'
        401:
          description: 'You will receive one of the following messages in answer: <br> <hr>
<ul>
  <li><strong> {"message":"Authentication credentials were not provided."}</strong><br>  Perhaps you forgot to specify an Authorization header in the request. Please check it and try again.
</li>
<br>
  <li><strong> {"message":"Signature has expired."}</strong> <br> Your token has expired. Get new token and try again.</li>
</ul>
<hr>
All messages type &mdash; string. '
      security:
        - Bearer: []

  #Users
  /users:
    get:
      tags:
        - Users
      summary: Get All Users
      description: Get information about all users of the account.
      produces:
        - application/json
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetAllUsersAnswer"
      security:
        - Bearer: []

  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get User Details
      produces:
        - application/json
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
          #          format: int64
          description: A unique ID of a user in our control panel. User_ID can be received in the previous request.
      responses:
        200:
          description: 'Successful. <br><br> The fields in the response will be the same as in the previous request.<br> Refer <a href="/#operation--clients-me-get"> here</a> for description.'
      security:
        - Bearer: []


    put:
      tags:
        - Users
      summary: Change User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangeUser"
        - in: path
          name: user_id
          description: A unique ID of a user in our control panel. User_ID can be received in the previous request.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Success. In answer you will see renewed details. Parameters are described in Get All Users of Get User Details."
        400:
          description: 'Probably you made a mistake in a field or missed a punctuation symbol in JSON. <br> <br> Possible messages: <ul><li>{"errors":{"errors":["Wrong phone"]}</li><li>{"message":"JSON parse error..."}</li><ul>'
        401:
          description: '{"message":"Signature has expired."} <br><br> Your token has expired. Get new token and try again.'
        503:
          description: '{"error":"Error occurred."} <br><br> You haven’t specified required fields in the request.<br> Check them and try again'
      security:
        - Bearer: []

    delete:
      tags:
        - Users
      summary: Delete User
      produces:
        - application/json
      parameters:
        - in: path
          name: user_id
          description: User id
          required: true
          type: integer
      #          format: int64
      responses:
        204:
          description: 'Successful. Empty response from the API. <br><br> If you send a request to get information about all users, you will not see deleted users in the API response.'
      security:
        - Bearer: []

  /auth/invite:
    post:
      tags:
        - Users
      summary: Invite New User
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/InviteUser"
      responses:
        200:
          description: 'Successful. We have sent an invitation. The user will receive a link to create an account password.'
          schema:
            $ref: "#/definitions/InviteUserResponse"
      security:
        - Bearer: []

  /public-ip-list:
    get:
      tags:
        - IP Addresses List
      summary: Get CDN Servers IP Adresses
      description: This list updates from time to time. If you wish to use IP from this list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL.
      produces:
        - application/json
      responses:
        200:
          description: 'You will see the list of IP adresses of all CDN servers. The API token is not required.'

  #Origins

  /originGroups:
    get:
      tags:
        - Origins
      summary: Get All Origins Groups
      description: Get information about Origins Groups and Origin Sources.

      produces:
        - application/json
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/OriginsParameters"
      security:
        - Bearer: []

    post:
      tags:
        - Origins
      summary: Create Origins Group
      description: "The fields described in the previous request."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateOriginGroups"
      responses:
        200:
          description: 'Successful.<br><br> You will get details of New Origins Group in response.<br> All fields are described <a href="/#operation--originGroups-get"> here</a>.'
      security:
        - Bearer: []

  /originGroups/{originGroup_id}:
    get:
      tags:
        - Origins
      summary: Get Origins Group
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.<br><br>You will find more details in the <a href="/#operation--originGroups-get">Get Origins Groups</a> section.'
      security:
        - Bearer: []

    put:
      tags:
        - Origins
      summary: Change Origins Group
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangeOriginGroups"
      responses:
        200:
          description: 'Origins group has been successfully changed.'
      security:
        - Bearer: []

    delete:
      tags:
        - Origins
      summary: Delete Origins Group
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Origins Group has been successfully deleted.'
      security:
        - Bearer: []

  /originGroups/{originGroup_id}/origins:
    get:
      tags:
        - Origins
      summary: Get Origins in Group
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description:  ID of Origins Group.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetOrigin"
      security:
        - Bearer: []

    post:
      tags:
        - Origins
      summary: Create Origin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateOrigin"
      responses:
        201:
          description: ''
        403:
          description: ''
        404:
          description: ''
      security:
        - Bearer: []

  /originGroups/{originGroup_id}/origins/{origin_id}:
    get:
      tags:
        - Origins
      summary: Get Origin
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: origin_id
          description: Origin source ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetOrigin"
      security:
        - Bearer: []

    put:
      tags:
        - Origins
      summary: Change Origin in Group
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: origin_id
          description: Origin Source ID.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangeOrigin"
      responses:
        200:
          description: 'The origin has been successfully chaged.'
          schema:
            $ref: "#/definitions/GetOrigin"
      security:
        - Bearer: []

    delete:
      tags:
        - Origins
      summary: Delete Origin in Group
      produces:
        - application/json
      parameters:
        - in: path
          name: originGroup_id
          description: ID of Origins Group.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: origin_id
          description: Origin source ID.
          required: true
          type: integer
      #          format: int64
      responses:
        204:
          description: 'The origin has been successfully deleted.'
      security:
        - Bearer: []

  /resources:
    get:
      tags:
        - Resources
      summary: Get All Resources
      description: Get information about all CDN Resources in your account.
      produces:
        - application/json
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetAllResources"
      security:
        - Bearer: []

    post:
      tags:
        - Resources
      summary: Create CDN Resource
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/CreateResource"
      responses:
        201:
          description: 'Successful.'
      security:
        - Bearer: []

  /resources/{resource_id}:
    get:
      tags:
        - Resources
      summary: Get CDN Resource
      produces:
        - application
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetResource"
      security:
        - Bearer: []

    put:
      tags:
        - Resources
      summary: Change CDN Resource
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangeResources"
      responses:
        200:
          description: 'Successful. You will see renewed details of the CDN Resource in the response. '
      security:
        - Bearer: []

  /raw_log_settings:
    get:
      tags:
        - Raw Logs
      summary: Get Raw Logs settings
      description: "Get information about Raw Logs feature settings."
      produces:
        - application/json
      responses:
        200:
          description: "Successful."
          schema:
            $ref: "#/definitions/GetRawLogs"
        401:
          description: "You will receive one of the following messages in the response:
                        <ul>
                          <li>
                            \"Authentication credentials were not provided.\"
                          </li>
                          <li>
                            \"Signature has expired.\"
                          </li>
                        </ul>"
        403:
          description: "The feature is disabled for your account."
        404:
          description: "The settings do not exist or have been deleted."
      security:
        - Bearer: []

    post:
      tags:
        - Raw Logs
      summary: Setup Raw Logs settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          description: "<em>*required parameters</em>"
          schema:
            $ref: "#/definitions/SetupRawLogs"
      responses:
        201:
          description: "The feature is setup."
        400:
          description: "You will receive an error with the invalid parameter mentioned."
      security:
        - Bearer: []

    put:
      tags:
        - Raw Logs
      summary: Change Raw Logs settings
      description: "<em>PATCH method is not allowed.</em>"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          description: "<em>*required parameters</em>"
          schema:
            $ref: "#/definitions/ChangeRawLogs"
      responses:
        200:
          description: "Successful."
        401:
          description: "You will receive one of the following messages in the response:
                        <ul>
                          <li>
                            \"Authentication credentials were not provided.\"
                          </li>
                          <li>
                            \"Signature has expired.\"
                          </li>
                        </ul>"
      security:
        - Bearer: []

    delete:
      tags:
        - Raw Logs
      summary: Delete Raw Logs settings
      responses:
        204:
          description: "Raw Logs settings have been deleted successfully."
        401:
          description: "You will receive one of the following messages in the response:
                        <ul>
                          <li>
                            \"Authentication credentials were not provided.\"
                          </li>
                          <li>
                            \"Signature has expired.\"
                          </li>
                        </ul>"
      security:
        - Bearer: []

  /aws_regions:
    get:
      tags:
        - Raw Logs
      summary: Get AWS regions list
      description: "Get the list of Amazon AWS regions."
      responses:
        200:
          description: "Successful."
          schema:
            $ref: "#/definitions/GetAwsRegionsResponse"
        401:
          description: "You will receive one of the following messages in the response:
                        <ul>
                          <li>
                            \"Authentication credentials were not provided.\"
                          </li>
                          <li>
                            \"Signature has expired.\"
                          </li>
                        </ul>"
      security:
        - Bearer: []

  /resources/{id}/prefetch:
    post:
      tags:
        - Tools
      summary: Prefetch
      description: "The tool prepopulates files to a CDN befor user`s request. Recommended for files bigger than 200MB."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Resource ID, where you want to prepopulate content.
          required: true
          type: integer
        #            format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ResourcePrefetch"
      responses:
        201:
          description: 'Files were added to the waiting list. The time of procedure depends on number of files and their size.'
      security:
        - Bearer: []

  /resources/{id}/purge:
    post:
      tags:
        - Tools
      summary: Purge
      description: 'Purge deletes cache from CDN servers. It is necessary for updating CDN content. API calls related to purging are rate and size limited. See <a href="#purge-calls-limiting">Purge Calls Limiting</a> for details.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of CDN Resoruce
          required: true
          type: integer
        #            format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ResourcePurge"
      responses:
        201:
          description: 'Succeful. The request has been accepted. Files will be purged in order.'
      security:
        - Bearer: []

  /resources/{id}/rules:
    get:
      tags:
        - Rules
      summary: Get All Rules
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Resource ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetAllRules"
      security:
        - Bearer: []

    post:
      tags:
        - Rules
      summary: Create Rule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Resource ID.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateRules"
      responses:
        201:
          description: 'Successful. Find response parameters <a href="/#operation--resources--id--rules-get">here.</a>'
      security:
        - Bearer: []

  /resources/{resource_id}/rules/{id}:
    get:
      tags:
        - Rules
      summary: Get Rule
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: id
          description: Rule ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetRule"
      security:
        - Bearer: []

    put:
      tags:
        - Rules
      summary: Change Rule
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: id
          description: Rule ID.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          schema:
            $ref: "#/definitions/ChangeRule"
      responses:
        200:
          description: 'The rule has been changed sucessfully.'
      security:
        - Bearer: []

    delete:
      tags:
        - Rules
      summary: Delete Rule
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: CDN Resource ID.
          required: true
          type: integer
        #          format: int64
        - in: path
          name: id
          description: Rule ID.
          required: true
          type: integer
      #          format: int64
      responses:
        204:
          description: 'Rule has been deleted successfully.'
      security:
        - Bearer: []

  /resources/rule_templates:
    get:
      tags:
        - Rule templates
      summary: Get All Rule Templates
      produces:
        - application/json
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetAllRuleTemplates"
      security:
        - Bearer: []

    post:
      tags:
        - Rule templates
      summary: Create Rule Template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CreateRuleTemplates"
      responses:
        201:
          description: 'Successful. Find response parameters <a href="/#operation--resources-rule_templates--id--get">here.</a>'
      security:
        - Bearer: []

  /resources/rule_templates/{id}:
    get:
      tags:
        - Rule templates
      summary: Get Rule Template
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Rule Template ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetRuleTemplate"
      security:
        - Bearer: []

    put:
      tags:
        - Rule templates
      summary: Change Rule Template
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Rule Template ID.
          required: true
          type: integer
        #          format: int64
        - in: body
          name: body
          schema:
            $ref: "#/definitions/ChangeRuleTemplate"
      responses:
        200:
          description: 'The rule has been changed sucessfully.'
      security:
        - Bearer: []

    delete:
      tags:
        - Rule templates
      summary: Delete Rule Template
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Rule Template ID
          required: true
          type: integer
      #          format: int64
      responses:
        204:
          description: 'Rule template has been deleted successfully.'
      security:
        - Bearer: []

  /sslData:
    get:
      tags:
        - SSL Certificates
      summary: Get All SSL Certificates
      description: Get all SSL certificates installed in the control panel.
      produces:
        - application/json
      parameters:
        - in: query
          name: automated
          type: boolean
          required: true
          description: 'The way SSL certificate was issued.<br>
                        Two possible values:<br>
                        <ul>
                          <li>
                            <strong>true</strong> – (default) Let’s Encrypt certificate issued automatically.
                          </li>
                          <li>
                            <strong>false</strong> – certificate added by a user.
                          </li>
                        </ul>
                        <em>Example, ?automated=false</em>'
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetSSLAnswer"
      security:
        - Bearer: []

    post:
      tags:
        - SSL Certificates
      summary: Add SSL Certificate
      description: Add an SSL certificate to deliver content via HTTPS protocol. <br><br> Paste all strings of the certificate(s) and the private key in one string parameter. Each certificate in chain and the private key should be divided with the "\n" symbol like in the example.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AddSSL"
      responses:
        201:
          description: 'The certificate has been installed successfully.'
      security:
        - Bearer: []

  /sslData/{ssl_id}:
    get:
      tags:
        - SSL Certificates
      summary: Get SSL Certificate
      produces:
        - application/json
      parameters:
        - in: path
          name: ssl_id
          description: SSL certificate ID.
          required: true
          type: integer
      #          format: int64
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetSSLAnswer"
      security:
        - Bearer: []

    delete:
      tags:
        - SSL Certificates
      summary: Delete SSL Certificate
      produces:
        - application/json
      parameters:
        - in: path
          name: ssl_id
          description: SSL certificate ID
          required: true
          type: integer
      #          format: int64
      responses:
        204:
          description: 'SSL Certificate has been deleted successfully.'
      security:
        - Bearer: []

  /statistics/series:
    get:
      tags:
        - Statistics
      summary: Resource Stats
      description: "<h3>Series</h3>
                    Get CDN statistics for up to 90 days from today. Required parameters are marked with the asterisk *."
      produces:
        - application/json
      parameters:
        - in: query
          name: service*
          type: string
          required: true
          description: "Service name.<br />
                        Possible values: CDN.<br />
                        <em>Example, ?service=CDN</em>"
        - in: query
          name: from*
          type: string
          required: true
          description: "Beginning of the requested time period (ISO 8086/RFC 3339 format), UTC.<br />
                        <em>Example, &from=2018-12-01T00:00:00.000</em>"
        - in: query
          name: to*
          type: string
          description: "End of the requested time period (ISO 8086/RFC 3339 format), UTC.<br />
                        <em>Example, &to=2018-12-01T01:00:00.000</em>"
        - in: query
          name: granularity*
          type: string
          required: true
          description: "Duration of time chunks the data will be divided into.<br/>
                        Possible values: 1m, 5m, 15m, 1h, 1d.<br />
                        <em>Example, &granularity=1h</em>"
        - in: query
          name: resource*
          type: integer
          required: true
          description: "CDN resource ID(s).<br/>
                        To request several resources, use resource=1&resource=2.<br />"
        - in: query
          name: group_by*
          type: string
          required: true
          description: "Choose how to group the output: <br />
                        <ul>
                          <li>
                            <strong>resource</strong> – by resources’ IDs
                          </li>
                          <li>
                            <strong>region</strong> – by regions of CDN edge servers
                          </li>
                          <li>
                            <strong>vhost</strong> – by resource’s CNAMEs.
                          </li>
                        </ul>
                        Several values can be specified in the request: <em>group_by=region&group_by=resource</em>."
        - in: query
          name: metrics*
          type: string
          required: true
          description: "Choose the data you want to see: <br />
                        <ul>
                          <li>
                            <strong>upstream_bytes</strong> – traffic in bytes from an origin server to CDN servers or to Origin shielding when used
                          </li>
                          <li>
                            <strong>sent_bytes</strong> – traffic in bytes from CDN servers to clients
                          </li>
                          <li>
                            <strong>shield_bytes</strong> – traffic in bytes from Origin shielding to CDN servers
                          </li>
                          <li>
                            <strong>total_bytes</strong> – shield_bytes, upstream_bytes and sent_bytes combined
                          </li>
                          <li>
                            <strong>requests</strong> – the number of requests to edge servers
                          </li>
                          <li>
                            <strong>responses_2xx</strong> – the number of 2xx response codes
                          </li>
                          <li>
                            <strong>responses_3xx</strong> – the number of 3xx response codes
                          </li>
                          <li>
                            <strong>responses_4xx</strong> – the number of 4xx response codes
                          </li>
                          <li>
                            <strong>responses_5xx</strong> – the number of 5xx response codes
                          </li>
                          <li>
                            <strong>responses_hit</strong> – the number of responses with the header Cache: HIT
                          </li>
                          <li>
                            <strong>responses_miss</strong> – the number of responses with the header Cache: MISS
                          </li>
                          <li>
                            <strong>cache_hit_traffic_ratio</strong> – the formula: 1 - upstream_bytes / sent_bytes. We deduct the non-cached traffic from the total traffic amount.
                          </li>
                          <li>
                            <strong>shield_usage</strong> – returns shield enabling/disabling dates for different CDN Resources. The metric should be requested separatelly from other metrics. Granularity and group_by parameters do not affect the response values.
                          </li>
                        </ul>
                        <em>Example, &metrics=total_bytes</em>
                        "
      responses:
        200:
          description: 'Successful.'
          schema:
            $ref: "#/definitions/GetSeriesResponse"
        204:
          description: 'No data for the requested time period.'
      security:
        - Bearer: []

  /statistics/aggregate/stats?service=CDN:
    get:
      tags:
        - Statistics
      summary: Aggregated Stats (CDN)
      description: "Get monthly CDN traffic data. Required parameters are marked with the asterisk *. Request URL Parameters should be added as a query string after the endpoint."
      produces:
        - application/json
      parameters:
        - in: query
          name: service*
          type: string
          description: "Service name. <br/>
                        Specify CDN as a value: <br/>
                        <em>Example, ?service=CDN</em>"
        - in: query
          name: from*
          type: string
          description: "Beginning of the requested time period (ISO 8086/RFC 3339 format), UTC.<br/>
                        <em>
                        Examples:<br/>
                        &from=2018-11-01T00:00:00.000<br/>
                        &from=2018-11-01
                        </em><br/>
                        <br/>
                        Avoid specifying minutes and seconds"
        - in: query
          name: to*
          type: string
          description: "End of the requested time period (ISO 8086/RFC 3339 format), UTC.<br/>
                        <em>
                        Examples:<br/>
                        &to=2018-11-01T00:00:00.000<br/>
                        &to=2018-11-01
                        </em><br/>
                        <br/>
                        Avoid specifying minutes and seconds"
        - in: query
          name: resource
          type: integer
          description: "CDN resource ID(s).<br/>
                        To request several resources, use <em>resource=1&resource=2</em>"
        - in: query
          name: metrics*
          type: string
          description: "Choose the data you want to see:
                        <ul>
                          <li><strong>upstream_bytes</strong> – traffic in bytes from an origin server to CDN servers or to Origin shielding when used</li>
                          <li><strong>sent_bytes</strong> – traffic in bytes from CDN servers to clients</li>
                          <li><strong>shield_bytes</strong> – traffic in bytes from Origin shielding to CDN servers</li>
                          <li><strong>total_bytes</strong> – shield_bytes, upstream_bytes and sent_bytes combined</li>
                          <li><strong>requests</strong> – the number of requests to edge servers</li>
                          <li><strong>responses_2xx</strong> – the number of 2xx response codes</li>
                          <li><strong>responses_3xx</strong> – the number of 3xx response codes</li>
                          <li><strong>responses_4xx</strong> – the number of 4xx response codes</li>
                          <li><strong>responses_5xx</strong> – the number of 5xx response codes</li>
                          <li><strong>responses_hit</strong> – the number of responses with the header Cache: HIT</li>
                          <li><strong>responses_miss</strong> – the number of responses with the header Cache: MISS</li>
                          <li><strong>cache_hit_traffic_ration</strong> – the formula: 1 - upstream_bytes / sent_bytes. We deduct the non-cached traffic from the total traffic amount</li>
                          <li><strong>95_percentile</strong> – bandwidth metric that cuts off 5% of bandwidth peaks</li>
                          <li><strong>min_bandwidth</strong> – minimum bandwidth</li>
                          <li><strong>max_bandwidth</strong> – maximum bandwith</li>
                        </ul>
                        <em>Example, &metrics=total_bytes</em>"
        - in: query
          name: group_by*
          type: string
          description: "The available groupings:
                        <ul>
                          <li>by resource</li>
                          <li>by region</li>
                        </ul>
                        You can use both.<br/>
                        <em>Example, &group_by=resource</em>"
        - in: query
          name: regions
          type: string
          description: "Choose the regions that should be displayed:
                        <ul>
                          <li>na – North America</li>
                          <li>eu – Europe</li>
                          <li>cis – Commonwealth of Independent States</li>
                          <li>asia – Asia</li>
                          <li>au – Australia</li>
                          <li>latam – Latin America</li>
                          <li>me – Middle East</li>
                        </ul>
                        *Required if <em>group_by = region</em>"
        - in: query
          name: flat
          type: boolean
          description: "The waу parameters are arranged in the response.<br/>
                        Two possible values:
                        <ul>
                          <li>True – flat structure</li>
                          <li>False – (default) embedded structure</li>
                        </ul>
                        <em>Example, ?flat=true</em>"

      responses:
        200:
          description: 'Successful'
          schema:
            $ref: "#/definitions/GetAggregatedCDNStatisticsResponse"
        204:
          description: "No data for the requested time period"
      security:
        - Bearer: []

  /statistics/aggregate/stats?service=STREAMING:
    get:
      tags:
        - Statistics
      summary: Aggregated Stats (Streaming)
      description: "Get monthly STREAMING data. Required parameters are marked with the asterisk *. Request URL Parameters should be added as a query string after the endpoint."
      produces:
        - application/json
      parameters:
        - in: query
          name: service*
          type: string
          description: "Service name. <br/>
                        Specify STREAMING as a value: <br/>
                        <em>Example, ?service=STREAMING</em>"
        - in: query
          name: from*
          type: string
          description: "Beginning of the requested time period (ISO 8086/RFC 3339 format), UTC.<br/>
                        <em>
                        Examples:<br/>
                        &from=2018-11-01T00:00:00.000<br/>
                        &from=2018-11-01
                        </em><br/>
                        <br/>
                        Avoid specifying minutes and seconds"
        - in: query
          name: to*
          type: string
          description: "End of the requested time period (ISO 8086/RFC 3339 format), UTC.<br/>
                        <em>
                        Examples:<br/>
                        &to=2018-11-01T00:00:00.000<br/>
                        &to=2018-11-01
                        </em><br/>
                        <br/>
                        Avoid specifying minutes and seconds"
        - in: query
          name: metrics*
          type: string
          description: "Choose the data you want to see:
                        <ul>
                          <li><strong>streams</strong> – the total time spent on transcoding in minutes</li>
                          <li><strong>max_size</strong> – the maximum VOD storage usage for the requested period.</li>
                        </ul>
                        <em>Example, &metrics=streams</em>"
        - in: query
          name: flat
          type: boolean
          description: "The waу parameters are arranged in the response.<br/>
                        Two possible values:
                        <ul>
                          <li>True – flat structure</li>
                          <li>False – (default) embedded structure</li>
                        </ul>
                        <em>Example, ?flat=true</em>"
      responses:
        200:
          description: 'Successful'
          schema:
            $ref: "#/definitions/GetAggregatedVPStatisticsResponse"
        204:
          description: "No data for the requested time period"
      security:
        - Bearer: []

  /resources/{resource_id}/shielding_v2:
    get:
      tags:
        - Origin Shielding
      summary: Get Origin Shielding Details
      description: Get information about Origin shielding.
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
      responses:
        200:
          description: "Successful."
          schema:
            $ref: "#/definitions/GetOriginShielding"
    put:
      tags:
        - Origin Shielding
      summary: Change Origin Shielding Settings
      description: Change Origin shielding settings or disabled Origin shielding.
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ChangeOriginShieldingRequest"
      responses:
        200:
          description: "Successful."
        400:
          description: 'You will receive the following message in answer from API:
                        <ul>
                          <li>
                            <strong>{"errors":{"shielding_pop":["Invalid pk \"{}\" - object does not exist."]}}</strong><br/>
                            Probably you made a mistake in a Origin shielding location ID. Find a request to get available Origin shielding location IDs <a href="/#operation--shieldingpop_v2-get">here</a>.<br/>
                            Message type — string.
                          </li>
                        <ul>'
      security:
        - Bearer: []

  /shieldingpop_v2:
    get:
      tags:
        - Origin Shielding
      summary: Get Origin Shielding Locations Details
      description: Get information about all Origin shielding locations available in your account.
      responses:
        200:
          description: "Successful."
          schema:
            $ref: "#/definitions/GetShieldingPOPV2"
      security:
        - Bearer: []

  /resources/{resource_id}/ssl/le/issue:
    post:
      tags:
        - Let's Encrypt
      summary: Issue Let's Encrypt SSL Certificate
      description: Issue free Let's Encrypt SSL Certificate for the resource. Certificate issuing can take up to 30 minutes. The issued certificate will be renewed automatically when expired.
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
      responses:
        201:
          description: "Issuing process has been started."
        400:
          description: 'You will receive one of the following messages in answer:<br/>
                        <ul>
                          <li>
                            <strong>{"error": "Resource already has automated certificate"}</strong><br/>
                            The specified resource already has Let&#39;s Encrypt SSL certificate. Please check the resource ID.<br/>
                            If you want to issue a new Let&#39;s Encrypt SSL certificate for the resource, you should first revoke the existing Let’s Encrypt SSL certificate. Find a request to revoke SSL certificate here.
                          </li>
                          <li>
                            <strong>{"error": "Certificate issuing process have already being launched"}</strong><br>
                            For the specified resource, the process of issuing Let&#39;s Encrypt SSL certificate has already been started.<br>
                            We are already issuing Let&#39;s Encrypt SSL certificate for the specified resource. It can take up to 30 minutes.<br>
                            If you want to issue a new Let&#39;s Encrypt SSL certificate for the resource, you should first revoke the existing SSL certificate. You can revoke SSL certificate only when SSL certificate issued. Find a request to revoke SSL certificate TODO: добавить ссылку.
                          </li>
                        <ul>'
      security:
        - Bearer: []

  /resources/{resource_id}/ssl/le/renew:
    post:
      tags:
        - Let's Encrypt
      summary: Renew Let's Encrypt SSL Certificate
      description: Renew free Let's Encrypt SSL Certificate for the resource. It can take up to 15 minutes.
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
      responses:
        201:
          description: "Renewal process has been started."
        400:
          description: 'You will receive one of the following messages in answer:
                        <ul>
                          <li>
                            <strong>{"error": "Resource doesnt&#39;t have any certificates"}</strong><br>
                            The specified resource doesnt&#39;t have SSL certificates. Please check the resource ID.
                          </li>
                          <li>
                            <strong>{"error": "Resource doesn&#39;t support automatic renewal"}</strong><br>
                            The specified resource doesn&#39;t have Let’s Encrypt certificates. Please check the resource ID.
                          </li>
                        </ul>'
      security:
        - Bearer: []

  /resources/{resource_id}/ssl/le/revoke:
    post:
      tags:
        - Let's Encrypt
      summary: Revoke Let's Encrypt SSL Certificate
      description: Revoke and stop auto-renew of a free Let's Encrypt SSL Certificate for a resource.
      produces:
        - application/json
      parameters:
        - in: path
          name: resource_id
          description: Resource ID.
          required: true
          type: integer
      responses:
        201:
          description: "Certificate has been revoked."
        400:
          description: 'You will receive one of the following messages in answer:
                        <ul>
                          <li>
                            <strong>{"error": "Resource doesn&#39;t have any certificates"}</strong><br>
                            The specified resource doesn&#39;t have SSL certificates. Please check the resource ID.
                          </li>
                          <li>
                            <strong>{"error": "Resource doesn&#39;t support automatic renewal"}</strong><br>
                            The specified resource doesn&#39;t have Let’s Encrypt certificates. Please check the resource ID.
                          </li>
                        </ul>'
      security:
        - Bearer: []

definitions:

  GetAllRules:
    type: object
    properties:
      id:
        type: integer
        description: 'Rule ID.'
      name:
        type: string
        description: "Rule name."
      deleted:
        type: boolean
        description: 'The status of the rule. <br><br> False — the Rule is active.'
      originGroup:
        type: integer
        description: 'ID of the Origins Group that rule will be applied for.<br><br>You can use the rule without specifying an Origins Group. In this case the rule will be applied to the CDN Resource Origins Group.'
      rule:
        type: string
        description: 'A pattern that defines when the rule is triggered.  <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      weight:
        type: integer
        description: 'Rule weight that determines rule execution order: from the smallest (0) to the highest.'
      originProtocol:
        type: string
        description: 'Shows a protocol used by CDN servers to request content from an origin source.<br><br>
        Possible values are:
        <ul>
        <li><strong>HTTPS</strong> &mdash; CDN servers connect to origin via HTTPS.</li>
        <li><strong>HTTP</strong> &mdash; CDN servers connect to origin via HTTP.</li>
        <li><strong>MATCH</strong> &mdash; Connection protocol is chosen automatically (content on origin source should be available for the CDN both through HTTP and HTTPS).</li>
        </ul>'
      overrideOriginProtocol:
        type: string
        description: 'The option allows to set a different from the resource settings protocol to connect to the origin.<br><br>
        Possible values are:
        <ul>
        <li><strong>null</strong> &mdash; The originProtocol setting is inherited from the resource settings.</li>
        <li><strong>HTTPS</strong> &mdash; CDN servers connect to origin via HTTPS.</li>
        <li><strong>HTTP</strong> &mdash; CDN servers connect to origin via HTTP.</li>
        <li><strong>MATCH</strong> &mdash; Connection protocol is chosen automatically (content on origin source should be available for the CDN both through HTTP and HTTPS).</li>
        </ul>'
      #options
      options:
        type: object
        description: "Each option in Rule settings can be in one of the following states:
                             <br><ul><li><strong>Inherit.</strong> The option is deleted from the rule. It means that it inherits it's value from the parent CDN-resource settings. In this case the whole option takes <strong>NULL</strong> value.</li>
                             <li><strong>ON (enabled: true)</strong> Option is added to rule settings and enabled.</li>
                             <li><strong>OFF (enabled: false)</strong> Option is added to rule settings and disabled. You can use this state if you need to turn off inheritance of CDN resource settings for this option.</li>
                             </ul>
                             <br>
                             Option can be either typed base class or untyped base class.
                             <br>
                             Each option added to CDN resource settings should have the following mandatory request fields:
                             <br><strong>Enabled (boolean) </strong> - parameter indicates if option is enabled or disabled.<br>
                             <strong>Value  (boolean, etc.) </strong> - parameter indicates the actual option value.
                             <br>
                             <hr>
                             The following options with typed base class are available: <br><ul>
                             <li><strong>browser_cache_settings<br>type &mdash; string</strong><br><br>
                             The cache expiration time for customers' browsers in seconds. Use '0s' to disable caching.<br>
                             The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Responses with other codes will not be cached.
                             <br>
                             <hr>
                             <li><strong>edge_cache_settings</strong><br>
                             The cache expiration time for CDN servers.<br><br>
                             It has the following fields:
                              <ul>
                                <li>
                                  <strong>value</strong><br>
                                  <strong>type &mdash; string </strong><br><br>
                                  Caching time for a response with codes 200, 206, 301, 302. Responses with codes 4xx, 5xx will not be cached. Use '0s' disable to caching.<br>
                                  Use custom_values field to specify a custom caching time for a response with specific codes.<br><br>
                                </li>
                                <li>
                                  <strong>custom_values</strong><br>
                                  <strong>type &mdash; object </strong><br><br>
                                  Caching time for a response with specific codes. These settings have a higher priority than the value field.<br>
                                  Response code ('304', '404' for example). Use 'any' to specify caching time for all response codes.<br>
                                  Caching time in seconds ('0s', '600s' for example). Use '0s' to disable caching for a specific response code.<br><br>
                                </li>
                                <li>
                                  <strong>default</strong><br>
                                  <strong>type &mdash; string </strong><br><br>
                                  Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers.<br>
                                  Responses with other codes will not be cached.<br><br>
                                </li>
                              </ul>
                             Fields value and default cannot be used simultaneously. Only one of these fields can be used at the same time.
                            <br>
                             <hr>
                             <li><strong>disable_cache<br>type &mdash; boolean </strong><br><br>
                             When enabled the content caching is completely disabled.<br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>cache_http_headers<br>type &mdash; array of strings </strong><br>
                             List HTTP Headers that must be included in the response.<br>
                             <br>
                             <hr>
                             <li><strong>ignore_cookie<br>type &mdash; boolean </strong><br><br>
                             By default, files pulled from an origin source with cookies are not cached in a CDN. Enable this option to cache such objects.<br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li>
                              <strong>
                                ignoreQueryString<br>
                                type &mdash; boolean
                              </strong>
                              <br>
                              <br>
                              This option determines how files with different query strings will be cached: either as one object (when this option is enabled) or as different objects (when this option is disabled).<br/>
                              <br>
                              <br>
                              It has two possible values:
                              <ul>
                                <li>
                                  <strong>true</strong> &mdash; option is enabled.
                                </li>
                                <li>
                                  <strong>false</strong> &mdash; option is disabled.
                                </li>
                              </ul>
                             <br>
                             <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br>
                             <hr>
                             <li>
                              <strong>query_params_whitelist</strong><br/>
                              <strong>type &mdash; array of strings</strong>
                              <br/>
                              <br/>
                              Specify list of query strings. Files with those query strings will be cached as different objects.
                              <br/>
                              <br/>
                              <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br/>
                             <hr/>
                             <li>
                              <strong>query_params_blacklist</strong><br/>
                              <strong>type &mdash; array of strings</strong>
                              <br/>
                              <br/>
                              Specify list of query strings. Files with those query strings will be cached as one object.
                              <br/>
                              <br/>
                              <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br/>
                             <hr/>
                             <li><strong>slice<br>type &mdash; boolean </strong><br><br> Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.The origin must support HTTP Range requests. The option is based on the [Slice](https://nginx.org/en/docs/http/ngx_http_slice_module.html) module. By default the option is disabled. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>fetch_compressed<br>type &mdash; boolean </strong><br><br>
                             A CDN request and cache already compressed content. Your server should support compression. CDN servers won't ungzip your content even if a user's browser doesn't accept compression (nowadays almost all browsers support it). By default, option is disabled (enabled: false).<br>
                             <strong>Not supported with gzipON option enabled. Only one of these options can be used at the same time. fetch_compressed overrides gzipOn.</strong><br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>gzipOn<br>type &mdash; boolean </strong><br><br>The option allows to compress content with gzip on the CDN`s end. CDN servers will request only uncompressed content from the origin.<br><br> <strong> Not supported with fetch_compressed</strong>. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>brotli_compression<br>type &mdash; array of strings </strong>
                                <br><br> The option allows to compress content with brotli on the CDN's end.
                                <br> Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
                                <br><br> Possible values:
                                <ul>
                                  <li> application/javascript </li>
                                  <li> application/json </li>
                                  <li> application/vnd.ms-fontobject </li>
                                  <li> application/x-font-ttf </li>
                                  <li> application/x-javascript </li>
                                  <li> application/xml </li>
                                  <li> application/xml+rss </li>
                                  <li> image/x-icon </li>
                                  <li> text/css </li>
                                  <li> text/html <strong>(mandatory value always should be listed)</strong> </li>
                                  <li> text/javascript </li>
                                  <li> text/plain </li>
                                  <li> text/xml </li>
                                </ul>
                             </li>
                             <br>
                             <hr>
                             <li><strong>redirect_http_to_https<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTP requests to HTTPS.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>redirect_https_to_http<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTPS requests to HTTP.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>hostHeader<br>type &mdash; string </strong><br><br>Specify the Host header that CDN servers use when request content from an origin server.
                             Your server must be able to process requests with the chosen header.
                             If the option is in NULL state Host Header value is taken from the parent CDN resource's value. <br><br>
                             <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong></li><br>
                             <hr>
                             <li>
                               <strong>forward_host_header</strong><br>
                               <strong>type &mdash; boolean</strong><br><br>
                               When a CDN requests content from an origin server the option allows forwarding the Host header used in the request made to a CDN.<br><br>
                               <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br><br>
                               It has two possible values:
                               <ul>
                                 <li>true &mdash; option is enabled.</li>
                                 <li>false &mdash; option is disabled.</li>
                               </ul>
                             </li>
                             <br>
                             <hr>
                             <li><strong>staticHeaders<br>type &mdash; object </strong><br><br>Specify custom HTTP Headers that a CDN server adds to response.</li>
                             <br>
                             <hr>
                             <li><strong>cors<br>type &mdash; array of strings </strong><br>
                               The option adds the Access-Control-Allow-Origin header to responses from CDN servers. It has 3 parameters
                               <ul><li><strong>Adds &#042; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;&#042;&quot;] </li>
                                 <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value if the origin matches one of the listed domains</strong><br>&quot;value&quot;: [&quot;domain.com&quot;, &quot;second.dom.com&quot;]</li>
                                 <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;$http_origin&quot;]</li></ul>
                               </li>
                             <br>
                             <hr>
                             <li><strong>stale<br>type &mdash; array of strings </strong><br><br>The list of errors which the option is applied for.<br><br> Possible values:<br> 'error', 'http_403', 'http_404', 'http_429', 'http_500', 'http_502', 'http_503', 'http_504', 'invalid_header', 'timeout', 'updating'.</li>
                             <br>
                             <hr>
                             <li><strong>allowedHttpMethods<br>type &mdash; array of strings </strong><br><br>The list of allowed HTTP methods.<br><br> Available methods:<br> GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.</li>
                             <br>
                             <hr>
                             <li><strong>proxy_cache_methods_set<br>type &mdash; boolean </strong><br><br>Allows caching for GET, HEAD and POST requests.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                             <hr>
                             <li><strong>disable_proxy_force_ranges<br>type &mdash; boolean </strong><br><br>The option is enabled by default. It allows getting 206 responses regardless settings of an origin source.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                             <hr>
                             <li>
                               <strong>staticRequestHeaders</strong>
                               <br>
                               <strong>type &mdash; object</strong>
                               <br>
                               <br>
                               Specify up to 50 custom HTTP Headers for a CDN server to add to request.<br><br> Header name ('Header-One', 'Header-Two' in the example) is restricted to 255 symbols and can contain latin letters (A-Z, a-z), numbers (0-9), dashes, and underscores.<br><br> Header value ('Value 1', 'Value 2' in the example) is restricted to 512 symbols and can contain latin letters (a-z), numbers (0-9), spaces, underscores and symbols (-/.:). Space can be used only between words.
                             </li>
                             </ul>
                             <br>
                             <hr>
                             Options with untyped base class don’t have the value field but have a set of custom fields. <br>
                             The following options with untyped base class are available: 
                             <br><ul><li><strong>rewrite</strong></li>
                             <br>
                             It has the following fields:

                             <br>

                             <strong>flag<br>
                             type &mdash; string </strong>
                             <br><br>
                             Defines flag for the Rewrite option. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>last</strong> &mdash; stops processing of the current set of ngx_http_rewrite_module directives and starts a search for a new location matching changed URI.</li>
                             <li><strong>break</strong> &mdash; stops processing of the current set of the Rewrite option.</li>
                             <li><strong>redirect</strong> &mdash; returns a temporary redirect with the 302 code; It is used when a replacement string does not start with &#34;http:&#47;&#47;&#34;, &#34;https:&#47;&#47;&#34;, or &#34;$scheme&#34;.</li>
                             <li><strong>permanent</strong> &mdash; returns a permanent redirect with the 301 code.</li> </ul>
                             </li>

                             <br>

                             <strong>body<br>
                             type &mdash; string&#47;regex </strong>
                             <br><br>
                             The pattern for Rewrite. At least one group should be specified.<br>
                             For Example: /rewrite_from/(.*) /rewrite_to/$1 <br>
                             Read more about Rewrite option [here](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite).
                             </li><hr></ul>

                             <ul><li><strong>force_return</strong></li>
                             <br>
                              Allows to apply custom HTTP code to the CDN content.<br><br>
                              Specify HTTP-code you need and text or URL if you're going to set up redirection.<br><br>
                              It has the following fields:
                             <br><br>

                             <strong>сode<br>
                             type &mdash; integer </strong>
                             <br><ul>
                               <li>Minimum value: 100</li>
                               <li>Maximum value: 599</li>
                             </ul><br>
                             <strong>body<br>
                             type &mdash; string </strong>
                             <br><br>
                             Specify the URL for redirection.
                             <br><hr></ul>

                             <ul><li><strong>country_acl</strong></li>
                             <br>
                             Control  access to the content for specified countries. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified countries.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified countries.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of countries according to ISO-3166-1.<br>
                             </li><hr></ul>

                             <ul><li><strong>user_agent_acl</strong></li>
                             <br>
                             Control access to the content for specified user-agent. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified User-Agents.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified User-Agents.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of User-Agent.<br>
                             </li><hr></ul>

                             <ul><li><strong>ip_address_acl</strong></li>
                             <br>
                             Control access to the CDN Resource content for specified IP addresses. <br>
                             <strong>If you wish to use IPs from our CDN servers IP list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL. [Read more.](#operation--public-ip-list-get) </strong> <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified IPs.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified IPs.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of IPs.<br>
                             </li><hr></ul>

                             <ul><li><strong>referrer_acl</strong></li>
                             <br>
                             Control access to the CDN Resource content for specified domain names. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified domain names.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified domain names.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of domain names.<br>
                             </li><hr></ul>

                             <ul><li><strong>secure_key</strong></li>
                             <br>
                             The option allows configuring an access with tokenized URLs. It makes impossible to access content without a valid (unexpired) hash key. <br>
                             When enabled you need to specify a key that you use to generate a token. <br>
                             It has the following fields:

                             <br>

                             <strong>key<br>
                             type &mdash; string </strong>
                             <br><br>
                             The key generated on your side which will be used for URL signing. <br>

                             <br>

                             <strong>type<br>
                             type &mdash; integer </strong>
                             <br><br>
                             Specify the type of URL Signing. It can be either 0 or 2.<br>
                             You can use one of the two possible types:<br><ul>
                             <li><strong>Type 2</strong> Excludes end users IP from secure token generation.</li>
                             <li><strong>Type 0</strong> Includes end users IP to secure token generation.</li>
                             </li></ul>
                             </li></ul>
                             </ul>
                     "
    example:
      [{
         id: 5,
         name: My first rule,
         deleted: false,
         options: {"allowedHttpMethods": {"enabled": true, "value": ["GET", "POST"]}, "cors": {"enabled": true, "value": ["yourdomain.com", "yourdomain2.com"]}, "fetch_compressed": {"enabled": true, "value": false}, "gzipOn": {"enabled": true, "value": true}, "brotli_compression": {"enabled": true, "value": ["text/html", "text/plain"]}, "redirect_http_to_https": {"enabled": true, "value": true}, "redirect_https_to_http": {"enabled": false, "value": true}, "hostHeader": {"enabled": true, "value": "host.com"}, "edge_cache_settings": {"enabled": true, "value": "43200s", "custom_values": {"100": "43200s"}}, "browser_cache_settings": {"enabled": true, "value": "3600s"}, "disable_cache": {"enabled": true, "value": false}, "forward_host_header": {"enabled": false, "value": false}, "cache_http_headers": {"enabled": false, "value": ["vary", "content-length", "last-modified", "connection", "accept-ranges", "content-type", "content-encoding", "etag", "cache-control", "expires", "keep-alive", "server"]}, "ignore_cookie": {"enabled": true, "value": true}, "ignoreQueryString": {"enabled": true, "value": false}, "query_params_whitelist": null, "query_params_blacklist": null, "proxy_cache_methods_set": {"enabled": true, "value": false}, "disable_proxy_force_ranges": {"enabled": true, "value": true}, "rewrite": {"body": "/(.*) /additional_path/$1", "enabled": true, "flag": "break"}, "force_return": {"enabled": true, "code": 301, "body": "http://example.com/redirect_address"}, "country_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["GB", "DE"]}, "referrer_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["google.com", "*.yandex.ru"]}, "user_agent_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["UserAgent Value"]}, "ip_address_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["192.168.1.100/32"]}, "secure_key": {"enabled": true, "key": "mysupersecretkey", "type": 2}, "slice": NULL, "stale": {"enabled": true, "value": ["http_404", "http_500"]}, "staticHeaders": {"enabled": true, "value": {"One_Header": "Value_1", "Two_Header": "Value_2"}}, "staticRequestHeaders": {"enabled": true, "value": {"Header-One": "Value 1", "Header-Two": "Value 2"}}},
         rule: pictures/,
         ruleType: 1,
         originGroup: null,
         weight: 0}]

  Login:
    type: object
    properties:
      username:
        type: string
        description: 'Your email. '
      password:
        type: string
        description: 'Your password. '
    required:
      - username
      - password
    example:
      username: you@yourcompany.com
      password: yourpassword

  Refresh:
    type: object
    properties:
      refresh:
        type: string
        description: 'The refresh token from the [login](https://docs.gcorelabs.com/#operation--auth-jwt-login-post) request.'
    required:
      - refresh
    example:
      refresh: eyJ0eXAiOiJKV1Q2lkIjo1MTEsImVtCJ1c2V2ns-QgWxERsywROmzASDniT3VHebO1DqgJ5ZIg


  LoginAnswer:
    type: object
    properties:
      token:
        type: string
        description: 'An API token to access and manage your account and settings.'
      expiration date:
        type: string
        description: 'Time when your token expires.'
    example:
      token: eyJ0eXAiOiJKV1Q2lkIjo1MTEsImVtCJ1c2V2ns-QgWxERsywROmzASDniT3VHebO1DqgJ5ZIg
      expire: 2017-04-17T01:28:15

  LoginAnswerJWT:
    type: object
    properties:
      refresh:
        type: string
        description: 'Use this token to refresh the access token.'
      access:
        type: string
        description: 'Use this token to access and manage your resources.'
    example:
      refresh: eyJ0eXAiOiJKV1Q2lkIjo1MTEsImVtCJ1c2V2ns-QgWxERsywROmzASDniT3VHebO1DqgJ5ZIg
      access: VyX3R5cGUiOiJjb21tb24iLCJ1c2VyX2dyb3VwcyI6WyJBZG1pbmlzdHJhdG9ycyJdLCJjbGll

  RecoveryPasswordRequest:
    type: object
    properties:
      email:
        type: string
        description: 'Your email. '
    required:
      - email
    example:
      email: yourmail@yourcompany.com

  ChangePasswordRequest:
    type: object
    properties:
      old:
        type: string
        description: 'Your old password.'
      new:
        type: string
        description: 'Your new password.'
      double:
        type: string
        description: Confirm your new password.
    required:
      - old
      - new
      - double
    example:
      double: 654321
      old: 123456
      new: 654321

  DetailsAnswer:
    type: object
    properties:
      id:
        type: integer
        description: "Your account ID."
      currentUser:
        type: integer
        description: "ID of user who requested information."
      users:
        type: array
        items:
          type: object
        description: "An array which contains information about all users of the requested account. <br>
<strong>User;</strong>  type &mdash; object. <br>
<hr>
User has such fields as:<br>
<ul>
  <li><strong>ID;</strong> type &mdash; integer.<br> User ID.</li> <br>
  <li><strong>deleted;</strong> type &mdash; boolean.<br> False - User is active. <br></li> <br>
  <li><strong>email;</strong> type &mdash; string.<br> User email. <br></li> <br>
  <li><strong>name;</strong> type &mdash; string.<br> User name.<br> </li> <br>
  <li><strong>client;</strong> type &mdash; integer.<br> ID of your control panel. <br></li> <br>
  <li><strong>company;</strong> type &mdash; string.<br> Your company. </li> <br>
  <li><strong>lang;</strong> type &mdash; string.<br> The language for the control panel.<br> </li> <br>
  <li><strong>phone;</strong> type &mdash; array of stings.<br> Phone numbers of the user.<br> </li></ul>"
      groups:
        type: array
        items:
          type: object
        description: "Information about user roles. <br>
<strong>Group of users;</strong>  type &mdash; object. <hr>
Group of user has such fields as:<br>
<ul>
  <li><strong>ID;</strong> type &mdash; integer.<br> ID of a group of user roles.</li> <br>
  <li><strong>name;</strong> type &mdash; string.<br> Name of a group of user roles.<br> </li> <br>
</ul>
<hr>
Possible values of groups and permissions:
<ul>
  <li><strong>{'id':1,'name':'Administrators'}</strong><br>Permission &mdash; Full access to the account. They can change all settings including adding other users, change service settings, rules and profile details.</li> <br>
  <li><strong>{'id':2,'name':'Engineers'}</strong><br>Permission &mdash; Almost full access to the account. They can change settings, rules and profile details, but they can’t invite new users into the account.</li> <br>
  <li><strong>{'id':5,'name':'Users'}</strong><br>Permission &mdash; Limited access. They can change personal profile (not company one), view profile settings, statistics and services settings.</li></ul>"
    example:
      id: 505
      currenUser: 511
      users: [{
                id: 513,
                deleted: false,
                email: user@yourcompany.com,
                name:  user,
                client: 5,
                company: your company,
                lang: en,
                phone: ["123","345","678"] }]
      groups: [{
                 id: 2,
                 name:  users}]

  GetAllUsersAnswer:
    type: object
    properties:
      id:
        type: integer
        description: "ID of your account in our system."
      currentUser:
        type: integer
        description: "ID of the user who requested information."
      users:
        type: array
        items:
          type: object
        description: "Array which contains information about all users of the current account. <br>
<strong>User;</strong>  type &mdash; object. <br>
<hr>
User has such fields as:<br>
<ul>
  <li><strong>ID;</strong> type &mdash; integer.<br> User ID.</li> <br>
  <li><strong>deleted;</strong> type &mdash; boolean.<br> User is active. <br></li> <br>
  <li><strong>email;</strong> type &mdash; string.<br> User email. <br></li> <br>
  <li><strong>name;</strong> type &mdash; string.<br> User name.<br> </li> <br>
  <li><strong>client;</strong> type &mdash; integer.<br> ID of your control panel. <br></li> <br>
  <li><strong>company;</strong> type &mdash; string.<br> Your company. </li> <br>
  <li><strong>lang;</strong> type &mdash; string.<br> The language of user`s control panel.<br> </li> <br>
  <li><strong>phone;</strong> type &mdash; array of stings.<br> User phone numbers.<br> </li>
</ul>
"
      groups:
        type: array
        items:
          type: object
        description: "Information about users roles. <br>
<strong>Group of users;</strong>  type &mdash; object. <hr>
Groups has the following fields:<br>
<ul>
  <li><strong>ID;</strong> type &mdash; integer.<br> ID of groups.</li> <br>
  <li><strong>name;</strong> type &mdash; string.<br> Name of a group.<br> </li> <br>
</ul>
<hr>
Possible values for groups and permissions:
<ul>
  <li><strong>{'id':1,'name':'Administrators'}</strong><br>Permission &mdash; Full access to the account. They can change all settings including adding other users, change services settings, rules and profile details.</li> <br>
  <li><strong>{'id':2,'name':'Engineers'}</strong><br>Permission &mdash; Almost full access to the account. They can change settings, rules and profile details, but they can’t invite new users into the account.</li> <br>
  <li><strong>{'id':5,'name':'Users'}</strong><br>Permission &mdash; Limited access. They can change personal profile (not company one), view profile settings, statistics and services settings.</li>
</ul>"
    example: [{
                id: 101,
                deleted: false,
                email: firstuser@yourcompany,
                name: First_User,
                client: 123,
                company: Your_Company,
                lang: en,
                phone: ["123","345","678"],
                groups: [{
                           id: 2,
                           name: Engineers}]},
              {
                id: 108,
                deleted: false,
                email: seconduser@yourcompany,
                name: second_User,
                client: 123,
                company: Your_Company,
                lang: en,
                phone: ["111","222","333"],
                groups: [{
                           id: 5,
                           name: Users}]}]

  OriginsParameters:
    type: object
    properties:
      id:
        type: integer
        description: 'Origin Group ID.'
      name:
        type: string
        description: 'Name of the Origins Group.'
      useNext:
        type: boolean
        description: 'This option have two possible values: <br> <ul><li><strong>true</strong> &mdash; The option is active. In case the origin responds with 4XX or 5XX codes, use the next origin from the list</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
      origin_ids:
        type: array
        items:
          type: object
        description: 'Contains information about all origins in the group.<br>  <br> It has the following parameters: <ul><li><strong>ID;</strong> type &mdash; integer. <br>Origin ID in the Group.</li><br><li><strong> source; </strong> type &mdash; string. <br> IP address or Domain name of your origin and the port if custom.</li><br><li><strong>backup;</strong> type &mdash; boolean. <ul><li><strong>true</strong> &mdash; The option is active. The origin will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul> </li></ul>'
      origins:
        type: array
        items:
          type: object
        description: 'Contains information about all IP address or Domain names of your origin and the port if custom. <br><br> It has such parameters as: <ul><li><strong> source; </strong> type &mdash; string. <br> IP address or Domain name of your origin and the port if custom.</li></ul>'
    example: [{
                id: 20,
                origin_ids:[{
                              id: 5,
                              source: yourwebsite.com,
                              backup: false},
                            {id: 6,
                             source: 1.2.3.4:5500,
                             backup: true}],
                origins:[{
                           source: yourwebsite.com},
                         {
                           source: 1.2.3.4:5500}],
                useNext: true,
                name: YourOriginGroup }]


  CreateOriginGroups:
    type: object
    properties:
      name:
        type: string
        description: 'Name of the origin group.'
      useNext:
        type: boolean
        description: 'This options have two possible values: <br> <ul><li><strong>true</strong> &mdash; The option is active. In case the origin responds with 4XX or 5XX codes, use the next origin from the list. </li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
      origins:
        type: array
        items:
          type: object
        description: 'Contains information about all IP or Domain names of your origin and the port if custom. <br><br> It has the following parameters: <ul><li><strong> source; </strong> type &mdash; string. <br> IP address or Domain name of your origin and the port if custom.</li><br><li><strong>backup;</strong> type &mdash; boolean. <ul><li><strong>true</strong> &mdash; The option is active. The backup will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul> </li></ul>'
    required:
      - name
      - useNext
    example:
      name: YourOriginGroup2
      useNext: true
      origins: [{source: yourwebsite.com, backup: false},{source: 1.2.3.4:5501, backup: false}]

  ChangeOriginGroups:
    type: object
    properties:
      name:
        type: string
        description: 'Name of your origin group.'
      useNext:
        type: boolean
        description: 'This oprion have two possible conditions: <br> <ul><li><strong>true</strong> &mdash; The option is active. IIn case the origin responds with 4XX or 5XX codes, use the next origin from the list</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
      origins:
        type: array
        items:
          type: object
        description: 'Contains information about all IP or Domain names of your origin and the port if custom. <br><br> It has the following parameters: <ul><li><strong> source; </strong> type &mdash; string. <br> IP address or Domain name of your origin and the port if custom.</li><br><li><strong>backup;</strong> type &mdash; boolean. <ul><li><strong>true</strong> &mdash; The option is active. The origin will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul> </li></ul>'
    required:
      - name
      - useNext
    example:
      name: group#2
      useNext: false
      origins: [{source: yourdomain.com, backup: false}]

  ChangeOrigin:
    type: object
    properties:
      source:
        type: string
        description: 'IP address or Domain name of your origin and the port if custom.'
      backup:
        type: boolean
        description: 'It has two possible values: <ul><li><strong>true</strong> &mdash; The option is active. The origin will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
    required:
      - source
      - backup
    example:
      source: test12.example.com
      backup: true

  GetOrigin:
    type: object
    properties:
      id:
        type: integer
        description: 'Origin ID in the Origins Group.'
      source:
        type: string
        description: 'IP address or Domain name of your origin and the port if custom.'
      backup:
        type: boolean
        description: 'It has two possible values: <ul><li><strong>true</strong> &mdash; The option is active. The origin will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
    example:
      id: 123
      source: test.example.com
      backup: false

  CreateOrigin:
    type: object
    properties:
      source:
        type: string
        description: 'IP address or Domain name of your origin and the port if custom.'
      backup:
        type: boolean
        description: 'It has two possible values: <ul><li><strong>true</strong> &mdash; The option is active. The origin will not be used until one of active origins become unavailable.</li><li><strong>false</strong> &mdash; The option is disabled.</li></ul>'
    required:
      - source
      - backup
    example:
      source: test.example.com
      backup: false

  ChangeRule:
    type: object
    properties:
      name:
        type: string
        description: "Rule name."
      rule:
        type: string
        description: "A pattern that defines when the rule is triggered. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash."
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      options:
        type: object
        description: "Descriptions of the parameters can be found [here](#operation--resources--id--rules-get)."
    example:
      ruleType: 0
      name: First rule
      rule: folder/images/*.png

  GetRule:
    type: object
    properties:
      id:
        type: integer
        description: 'Rule ID.'
      name:
        type: string
        description: "Rule name."
      deleted:
        type: boolean
        description: 'The status of the rule. <br><br> False — the Rule is active.'
      originGroup:
        type: integer
        description: 'ID of the Origins Group that rule will be applied for.<br><br>You can use the rule without specifying an Origins Group. In this case the rule will be applied to the CDN Resource Origins Group.'
      rule:
        type: string
        description: 'A pattern that defines when the rule is triggered.  <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      weight:
        type: integer
        description: 'Rule weight that determines rule execution order: from the smallest (0) to the highest.'
      originProtocol:
        type: string
        description: 'Shows a protocol used by CDN servers to request content from an origin source.<br><br>
        Possible values are:
        <ul>
        <li><strong>HTTPS</strong> &mdash; CDN servers connect to origin via HTTPS.</li>
        <li><strong>HTTP</strong> &mdash; CDN servers connect to origin via HTTP.</li>
        <li><strong>MATCH</strong> &mdash; Connection protocol is chosen automatically (content on origin source should be available for the CDN both through HTTP and HTTPS).</li>
        </ul>'
      overrideOriginProtocol:
        type: string
        description: 'The option allows to set a different from the resource settings protocol to connect to the origin.<br><br>
        Possible values are:
        <ul>
        <li><strong>null</strong> &mdash; The originProtocol setting is inherited from the resource settings.</li>
        <li><strong>HTTPS</strong> &mdash; CDN servers connect to origin via HTTPS.</li>
        <li><strong>HTTP</strong> &mdash; CDN servers connect to origin via HTTP.</li>
        <li><strong>MATCH</strong> &mdash; Connection protocol is chosen automatically (content on origin source should be available for the CDN both through HTTP and HTTPS).</li>
        </ul>'
      options:
        type: object
        description: "Each option in Rule settings can be in one of the following states:
                             <br><ul><li><strong>Inherit.</strong> The option is deleted from the rule. It means that it inherits it's value from the parent CDN-resource settings. In this case the whole option takes <strong>NULL</strong> value.</li>
                             <li><strong>ON (enabled: true)</strong> Option is added to rule settings and enabled.</li>
                             <li><strong>OFF (enabled: false)</strong> Option is added to rule settings and disabled. You can use this state if you need to turn off inheritance of CDN resource settings for this option.</li>
                             </ul>
                             <br>
                             Option can be either typed base class or untyped base class.
                             <br>
                             Each option added to CDN resource settings should have the following mandatory request fields:
                             <br><strong>Enabled (boolean) </strong> - parameter indicates if option is enabled or disabled.<br>
                             <strong>Value  (boolean, etc.) </strong> - parameter indicates the actual option value.
                             <br>
                             <hr>
                             The following options with typed base class are available: <br><ul>
                             <li><strong>browser_cache_settings<br>type &mdash; string</strong><br><br>
                             The cache expiration time for customers' browsers in seconds. Use '0s' to disable caching.<br>
                             The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Responses with other codes will not be cached.
                             <br>
                             <hr>
                             <li><strong>edge_cache_settings</strong><br>
                             The cache expiration time for CDN servers.<br><br>
                             It has the following fields:
                              <ul>
                                <li>
                                  <strong>value</strong><br>
                                  <strong>type &mdash; string </strong><br><br>
                                  Caching time for a response with codes 200, 206, 301, 302. Responses with codes 4xx, 5xx will not be cached. Use '0s' disable to caching.<br>
                                  Use custom_values field to specify a custom caching time for a response with specific codes.<br><br>
                                </li>
                                <li>
                                  <strong>custom_values</strong><br>
                                  <strong>type &mdash; object </strong><br><br>
                                  Caching time for a response with specific codes. These settings have a higher priority than the value field.<br>
                                  Response code ('304', '404' for example). Use 'any' to specify caching time for all response codes.<br>
                                  Caching time in seconds ('0s', '600s' for example). Use '0s' to disable caching for a specific response code.<br><br>
                                </li>
                                <li>
                                  <strong>default</strong><br>
                                  <strong>type &mdash; string </strong><br><br>
                                  Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers.<br>
                                  Responses with other codes will not be cached.<br><br>
                                </li>
                              </ul>
                             Fields value and default cannot be used simultaneously. Only one of these fields can be used at the same time.
                            <br>
                             <hr>
                             <li><strong>disable_cache<br>type &mdash; boolean </strong><br><br>
                             When enabled the content caching is completely disabled.<br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>cache_http_headers<br>type &mdash; array of strings </strong><br>
                             List HTTP Headers that must be included in the response.<br>
                             <br>
                             <hr>
                             <li><strong>ignore_cookie<br>type &mdash; boolean </strong><br><br>
                             By default, files pulled from an origin source with cookies are not cached in a CDN. Enable this option to cache such objects.<br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li>
                              <strong>
                                ignoreQueryString<br>
                                type &mdash; boolean
                              </strong>
                              <br>
                              <br>
                              This option determines how files with different query strings will be cached: either as one object (when this option is enabled) or as different objects (when this option is disabled).<br/>
                              <br>
                              <br>
                              It has two possible values:
                              <ul>
                                <li>
                                  <strong>true</strong> &mdash; option is enabled.
                                </li>
                                <li>
                                  <strong>false</strong> &mdash; option is disabled.
                                </li>
                              </ul>
                             <br>
                             <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br>
                             <hr>
                             <li>
                              <strong>query_params_whitelist</strong><br/>
                              <strong>type &mdash; array of strings</strong>
                              <br/>
                              <br/>
                              Specify list of query strings. Files with those query strings will be cached as different objects.
                              <br/>
                              <br/>
                              <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br/>
                             <hr/>
                             <li>
                              <strong>query_params_blacklist</strong><br/>
                              <strong>type &mdash; array of strings</strong>
                              <br/>
                              <br/>
                              Specify list of query strings. Files with those query strings will be cached as one object.
                              <br/>
                              <br/>
                              <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                             </li>
                             <br/>
                             <hr/>
                             <li><strong>slice<br>type &mdash; boolean </strong><br><br> Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.The origin must support HTTP Range requests. The option is based on the [Slice](https://nginx.org/en/docs/http/ngx_http_slice_module.html) module. By default the option is disabled. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>fetch_compressed<br>type &mdash; boolean </strong><br><br>
                             A CDN request and cache already compressed content. Your server should support compression. CDN servers won't ungzip your content even if a user's browser doesn't accept compression (nowadays almost all browsers support it). By default, option is disabled (enabled: false).<br>
                             <strong>Not supported with gzipON option enabled. Only one of these options can be used at the same time. fetch_compressed overrides gzipOn.</strong><br><br>
                             It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>gzipOn<br>type &mdash; boolean </strong><br><br>The option allows to compress content with gzip on the CDN`s end. CDN servers will request only uncompressed content from the origin.<br><br> <strong> Not supported with fetch_compressed</strong>. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>redirect_http_to_https<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTP requests to HTTPS.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>brotli_compression<br>type &mdash; array of strings </strong>
                                <br><br> The option allows to compress content with brotli on the CDN's end.
                                <br> Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
                                <br><br> Possible values:
                                <ul>
                                  <li> application/javascript </li>
                                  <li> application/json </li>
                                  <li> application/vnd.ms-fontobject </li>
                                  <li> application/x-font-ttf </li>
                                  <li> application/x-javascript </li>
                                  <li> application/xml </li>
                                  <li> application/xml+rss </li>
                                  <li> image/x-icon </li>
                                  <li> text/css </li>
                                  <li> text/html <strong>(mandatory value always should be listed)</strong> </li>
                                  <li> text/javascript </li>
                                  <li> text/plain </li>
                                  <li> text/xml </li>
                                </ul>
                             </li>
                             <br>
                             <hr>
                             <li><strong>redirect_https_to_http<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTPS requests to HTTP.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                             <br>
                             <hr>
                             <li><strong>hostHeader<br>type &mdash; string </strong><br><br>Specify the Host header that CDN servers use when request content from an origin server.
                             Your server must be able to process requests with the chosen header.
                             If the option is in NULL state Host Header value is taken from the parent CDN resource's value.<br><br>
                             <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br>
                             </li><br>
                             <hr>
                             <li>
                               <strong>forward_host_header</strong><br>
                               <strong>type &mdash; boolean</strong><br><br>
                               When a CDN requests content from an origin server the option allows forwarding the Host header used in the request made to a CDN.<br><br>
                               <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br><br>
                               It has two possible values:
                               <ul>
                                 <li>true &mdash; option is enabled.</li>
                                 <li>false &mdash; option is disabled.</li>
                               </ul>
                             </li>
                             <br>
                             <hr>
                             <li><strong>staticHeaders<br>type &mdash; object </strong><br><br>Specify custom HTTP Headers that a CDN server adds to response.</li>
                             <br>
                             <hr>
                             <li><strong>cors<br>type &mdash; array of strings </strong><br>
                               The option adds the Access-Control-Allow-Origin header to responses from CDN servers. It has 3 parameters
                               <ul><li><strong>Adds &#042; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;&#042;&quot;] </li>
                                 <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value if the origin matches one of the listed domains</strong><br>&quot;value&quot;: [&quot;domain.com&quot;, &quot;second.dom.com&quot;]</li>
                                 <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;$http_origin&quot;]</li></ul>
                               </li>
                             <br>
                             <hr>
                             <li><strong>stale<br>type &mdash; array of strings </strong><br><br>The list of errors which the option is applied for.<br><br> Possible values:<br> 'error', 'http_403', 'http_404', 'http_429', 'http_500', 'http_502', 'http_503', 'http_504', 'invalid_header', 'timeout', 'updating'.</li>
                             <br>
                             <hr>
                             <li><strong>allowedHttpMethods<br>type &mdash; array of strings </strong><br><br>The list of allowed HTTP methods.<br><br> Available methods:<br> GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.</li>
                             <br>
                             <hr>
                             <li><strong>proxy_cache_methods_set<br>type &mdash; boolean </strong><br><br>Allows caching for GET, HEAD and POST requests.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                             <hr>
                             <li><strong>disable_proxy_force_ranges<br>type &mdash; boolean </strong><br><br>The option is enabled by default. It allows getting 206 responses regardless settings of an origin source.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                             <hr>
                             <li>
                               <strong>staticRequestHeaders</strong>
                               <br>
                               <strong>type &mdash; object</strong>
                               <br>
                               <br>
                               Specify up to 50 custom HTTP Headers for a CDN server to add to request.<br><br> Header name ('Header-One', 'Header-Two' in the example) is restricted to 255 symbols and can contain latin letters (A-Z, a-z), numbers (0-9), dashes, and underscores.<br><br> Header value ('Value 1', 'Value 2' in the example) is restricted to 512 symbols and can contain latin letters (a-z), numbers (0-9), spaces, underscores and symbols (-/.:). Space can be used only between words.
                             </li>
                             </ul>
                             <br>
                             <hr>
                             Options with untyped base class don’t have the value field but have a set of custom fields. <br>
                             The following options with untyped base class are available: 
                             <br><ul><li><strong>rewrite</strong></li>
                             <br>
                             It has the following fields:

                             <br>

                             <strong>flag<br>
                             type &mdash; string </strong>
                             <br><br>
                             Defines flag for the Rewrite option. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>last</strong> &mdash; stops processing of the current set of ngx_http_rewrite_module directives and starts a search for a new location matching changed URI.</li>
                             <li><strong>break</strong> &mdash; stops processing of the current set of the Rewrite option.</li>
                             <li><strong>redirect</strong> &mdash; returns a temporary redirect with the 302 code; It is used when a replacement string does not start with &#34;http:&#47;&#47;&#34;, &#34;https:&#47;&#47;&#34;, or &#34;$scheme&#34;.</li>
                             <li><strong>permanent</strong> &mdash; returns a permanent redirect with the 301 code.</li> </ul>
                             </li>

                             <br>

                             <strong>body<br>
                             type &mdash; string&#47;regex </strong>
                             <br><br>
                             The pattern for Rewrite. At least one group should be specified.<br>
                             For Example: /rewrite_from/(.*) /rewrite_to/$1 <br>
                             Read more about Rewrite option [here](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite).
                             </li><hr></ul>

                             <ul><li><strong>force_return</strong></li>
                             <br>
                              Allows to apply custom HTTP code to the CDN content.<br><br>
                              Specify HTTP-code you need and text or URL if you're going to set up redirection.<br><br>
                              It has the following fields:
                             <br><br>

                             <strong>сode<br>
                             type &mdash; integer </strong>
                             <br><ul>
                               <li>Minimum value: 100</li>
                               <li>Maximum value: 599</li>
                             </ul><br>
                             <strong>body<br>
                             type &mdash; string </strong>
                             <br><br>
                             Specify the URL for redirection.
                             <br><hr></ul>

                             <ul><li><strong>country_acl</strong></li>
                             <br>
                             Control  access to the content for specified countries. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified countries.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified countries.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of countries according to ISO-3166-1.<br>
                             </li><hr></ul>

                             <ul><li><strong>user_agent_acl</strong></li>
                             <br>
                             Control access to the content for specified user-agent. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified User-Agents.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified User-Agents.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of User-Agent.<br>
                             </li><hr></ul>

                             <ul><li><strong>ip_address_acl</strong></li>
                             <br>
                             Control access to the CDN Resource content for specified IP addresses. <br>
                             <strong>If you wish to use IPs from our CDN servers IP list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL. [Read more.](#operation--public-ip-list-get) </strong> <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified IPs.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified IPs.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of IPs.<br>
                             </li><hr></ul>

                             <ul><li><strong>referrer_acl</strong></li>
                             <br>
                             Control access to the CDN Resource content for specified domain names. <br>
                             It has the following fields:

                             <br>

                             <strong>policy_type<br>
                             type &mdash; string </strong>
                             <br><br>
                             Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                             Possible values are:<br>                <ul>
                             <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified domain names.</li>
                             <li><strong>DENY</strong> &mdash; Block access to all except for specified domain names.</li>
                             </li></ul>

                             <br>

                             <strong>excepted_values<br>
                             type &mdash; array of strings </strong>
                             <br><br>
                             List of domain names.<br>
                             </li><hr></ul>

                             <ul><li><strong>secure_key</strong></li>
                             <br>
                             The option allows configuring an access with tokenized URLs. It makes impossible to access content without a valid (unexpired) hash key. <br>
                             When enabled you need to specify a key that you use to generate a token. <br>
                             It has the following fields:

                             <br>

                             <strong>key<br>
                             type &mdash; string </strong>
                             <br><br>
                             The key generated on your side which will be used for URL signing. <br>

                             <br>

                             <strong>type<br>
                             type &mdash; integer </strong>
                             <br><br>
                             Specify the type of URL Signing. It can be either 0 or 2.<br>
                             You can use one of the two possible types:<br><ul>
                             <li><strong>Type 2</strong> Excludes end users IP from secure token generation.</li>
                             <li><strong>Type 0</strong> Includes end users IP to secure token generation.</li>
                             </li></ul>
                             </li></ul>
                             </ul>
                     "
    example:
      {id: 5,
       name: My first rule,
       deleted: false,
       options: {"allowedHttpMethods": {"enabled": true, "value": ["GET", "POST"]}, "cors": {"enabled": true, "value": ["yourdomain.com", "yourdomain2.com"]}, "fetch_compressed": {"enabled": true, "value": false}, "gzipOn": {"enabled": true, "value": true}, "brotli_compression": {"enabled": true, "value": ["text/html", "text/plain"]}, "redirect_http_to_https": {"enabled": true, "value": true}, "redirect_https_to_http": {"enabled": false, "value": true}, "hostHeader": {"enabled": true, "value": "host.com"}, "edge_cache_settings": {"enabled": true, "value": "43200s", "custom_values": {"100": "43200s"}}, "browser_cache_settings": {"enabled": true, "value": "3600s"}, "disable_cache": {"enabled": true, "value": false}, "forward_host_header": {"enabled": false, "value": false}, "cache_http_headers": {"enabled": false, "value": ["vary", "content-length", "last-modified", "connection", "accept-ranges", "content-type", "content-encoding", "etag", "cache-control", "expires", "keep-alive", "server"]}, "ignore_cookie": {"enabled": true, "value": true}, "ignoreQueryString": {"enabled": true, "value": false}, "query_params_whitelist": null, "query_params_blacklist": null, "proxy_cache_methods_set": {"enabled": true, "value": false}, "disable_proxy_force_ranges": {"enabled": true, "value": true}, "rewrite": {"body": "/(.*) /additional_path/$1", "enabled": true, "flag": "break"}, "force_return": {"enabled": true, "code": 301, "body": "http://example.com/redirect_address"}, "country_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["GB", "DE"]}, "referrer_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["google.com", "*.yandex.ru"]}, "user_agent_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["UserAgent Value"]}, "ip_address_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["192.168.1.100/32"]}, "secure_key": {"enabled": true, "key": "mysupersecretkey", "type": 2}, "slice": NULL, "stale": {"enabled": true, "value": ["http_404", "http_500"]}, "staticHeaders": {"enabled": true, "value": {"One_Header": "Value_1", "Two_Header": "Value_2"}}, "staticRequestHeaders": {"enabled": true, "value": {"Header-One": "Value 1", "Header-Two": "Value 2"}}},
       rule: pictures/,
       ruleType: 1,
       originGroup: null,
       weight: 0}


  CreateRules:
    type: object
    properties:
      name:
        type: string
        description: 'Rule name.'
      rule:
        type: string
        description: 'A pattern that defines when the rule is triggered. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
    example:
      name: "All images"
      rule: "folder/images/*.png"
      ruleType: 1

  GetAllRuleTemplates:
    type: object
    properties:
      id:
        type: integer
        description: 'Rule Template ID'
      name:
        type: string
        description: "Rule Template name."
      client:
        type: integer
        description: "Client ID."
      deleted:
        type: boolean
        description: 'Status of the template. <br><br> False - template is active.'
      originGroup:
        type: integer
        description: 'ID of Origins Group that rule will be applied for.<br><br>You can use the rule without specifying ab Origins Group. In this case the rule will be applied to the CDN Resource Origins Group.'
      rule:
        type: string
        description: 'Part of path to files, extension of files or regEx, that can be used to determine how to apply rule. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has three possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      template:
        type: boolean
        description: 'Determines whether the rule is a template.'
      #options
      options:
        type: object
        description: "Each option in Rule template settings can be in one of the following states:
                                                  <br><ul><li><strong>Inherit.</strong> The option is deleted from the rule template. It means that it inherits it's value from the parent CDN-resource settings. In this case the whole option takes <strong>NULL</strong> value.</li>
                                                  <li><strong>ON (enabled: true)</strong> Option is added to rule tumplate settings and enabled.</li>
                                                  <li><strong>OFF (enabled: false)</strong> Option is added to rule template settings and disabled. You can use this state if you need to turn off inheritance of CDN resource settings for this option.</li>
                                                  </ul>
                                                  <br>
                                                  Option can be either typed base class or untyped base class.
                                                  <br>
                                                  Each option added to rule template settings should have the following mandatory request fields:
                                                  <br><strong>Enabled (boolean) </strong> - parameter indicates if option is enabled or disabled.<br>
                                                  <strong>Value  (boolean, etc.) </strong> - parameter indicates the actual option value.
                                                  <br>
                                                  <hr>
                                                  The following options with typed base class are available: <br><ul>
                                                   <li><strong>browser_cache_settings<br>type &mdash; string</strong><br><br>
                                                   The cache expiration time for customers' browsers in seconds. Use '0s' to disable caching.<br>
                                                   The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Responses with other codes will not be cached.
                                                   <br>
                                                   <hr>
                                                   <li><strong>edge_cache_settings</strong><br>
                                                   The cache expiration time for CDN servers.<br><br>
                                                   It has the following fields:
                                                    <ul>
                                                      <li>
                                                        <strong>value</strong><br>
                                                        <strong>type &mdash; string </strong><br><br>
                                                        Caching time for a response with codes 200, 206, 301, 302. Responses with codes 4xx, 5xx will not be cached. Use '0s' disable to caching.<br>
                                                        Use custom_values field to specify a custom caching time for a response with specific codes.<br><br>
                                                      </li>
                                                      <li>
                                                        <strong>custom_values</strong><br>
                                                        <strong>type &mdash; object </strong><br><br>
                                                        Caching time for a response with specific codes. These settings have a higher priority than the value field.<br>
                                                        Response code ('304', '404' for example). Use 'any' to specify caching time for all response codes.<br>
                                                        Caching time in seconds ('0s', '600s' for example). Use '0s' to disable caching for a specific response code.<br><br>
                                                      </li>
                                                      <li>
                                                        <strong>default</strong><br>
                                                        <strong>type &mdash; string </strong><br><br>
                                                        Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers.<br>
                                                        Responses with other codes will not be cached.<br><br>
                                                      </li>
                                                    </ul>
                                                   Fields value and default cannot be used simultaneously. Only one of these fields can be used at the same time.
                                                  <br>
                                                  <hr>
                                                  <li><strong>disable_cache<br>type &mdash; boolean </strong><br><br>
                                                  When enabled the content caching is completely disabled.<br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>cache_http_headers<br>type &mdash; array of strings </strong><br>
                                                  List HTTP Headers that must be included in the response.<br>
                                                  <br>
                                                  <hr>
                                                  <li><strong>ignore_cookie<br>type &mdash; boolean </strong><br><br>
                                                  By default, files pulled from an origin source with cookies are not cached in a CDN. Enable this option to cache such objects.<br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li>
                                                    <strong>ignoreQueryString<br>type &mdash; boolean </strong>
                                                    <br>
                                                    <br>
                                                    This option determines how files with different query strings will be cached: either as one object (when this option is enabled) or as different objects (when this option is disabled).
                                                    <br>
                                                    <br>
                                                    It has two possible values:
                                                    <ul>
                                                      <li>
                                                        <strong>true</strong> &mdash; option is enabled.
                                                      </li>
                                                      <li>
                                                        <strong>false</strong> &mdash; option is disabled.
                                                      </li>
                                                    </ul>
                                                  <br>
                                                  <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr>
                                                  <li>
                                                   <strong>query_params_whitelist</strong><br/>
                                                   <strong>type &mdash; array of strings</strong>
                                                   <br/>
                                                   <br/>
                                                   Specify list of query strings. Files with those query strings will be cached as different objects.
                                                   <br/>
                                                   <br/>
                                                   <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr/>
                                                  <li>
                                                    <strong>query_params_blacklist</strong><br/>
                                                    <strong>type &mdash; array of strings</strong>
                                                    <br/>
                                                    <br/>
                                                    Specify list of query strings. Files with those query strings will be cached as one object.
                                                    <br/>
                                                    <br/>
                                                    <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr/>
                                                  <li><strong>slice<br>type &mdash; boolean </strong><br><br> Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.The origin must support HTTP Range requests. The option is based on the [Slice](https://nginx.org/en/docs/http/ngx_http_slice_module.html) module. By default the option is disabled. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>fetch_compressed<br>type &mdash; boolean </strong><br><br>
                                                  A CDN request and cache already compressed content. Your server should support compression. CDN servers won't ungzip your content even if a user's browser doesn't accept compression (nowadays almost all browsers support it). By default, option is disabled (enabled: false).<br>
                                                  <strong>Not supported with gzipON option enabled. Only one of these options can be used at the same time. fetch_compressed overrides gzipOn.</strong><br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>gzipOn<br>type &mdash; boolean </strong><br><br>The option allows to compress content with gzip on the CDN`s end. CDN servers will request only uncompressed content from the origin.<br><br> <strong> Not supported with fetch_compressed</strong>. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>brotli_compression<br>type &mdash; array of strings </strong>
                                                     <br><br> The option allows to compress content with brotli on the CDN's end.
                                                     <br> Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
                                                     <br><br> Possible values:
                                                     <ul>
                                                       <li> application/javascript </li>
                                                       <li> application/json </li>
                                                       <li> application/vnd.ms-fontobject </li>
                                                       <li> application/x-font-ttf </li>
                                                       <li> application/x-javascript </li>
                                                       <li> application/xml </li>
                                                       <li> application/xml+rss </li>
                                                       <li> image/x-icon </li>
                                                       <li> text/css </li>
                                                       <li> text/html <strong>(mandatory value always should be listed)</strong> </li>
                                                       <li> text/javascript </li>
                                                       <li> text/plain </li>
                                                       <li> text/xml </li>
                                                     </ul>
                                                  </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>redirect_http_to_https<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTP requests to HTTPS.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>redirect_https_to_http<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTPS requests to HTTP.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>hostHeader<br>type &mdash; string </strong><br><br>Specify the Host header that CDN servers use when request content from an origin server.
                                                  Your server must be able to process requests with the chosen header.
                                                  If the option is in NULL state Host Header value is taken from the parent CDN resource's value.<br><br>
                                                  <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong>
                                                  </li><br>
                                                  <hr>
                                                  <li>
                                                    <strong>forward_host_header</strong><br>
                                                    <strong>type &mdash; boolean</strong><br><br>
                                                    When a CDN requests content from an origin server the option allows forwarding the Host header used in the request made to a CDN.<br><br>
                                                    <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br><br>
                                                    It has two possible values:
                                                    <ul>
                                                      <li>true &mdash; option is enabled.</li>
                                                      <li>false &mdash; option is disabled.</li>
                                                    </ul>
                                                  </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>staticHeaders<br>type &mdash; object </strong><br><br>Specify custom HTTP Headers that a CDN server adds to response.</li>
                                                  <br>
                                                  <hr>
                                                 <li><strong>cors<br>type &mdash; array of strings </strong><br>
                                                   The option adds the Access-Control-Allow-Origin header to responses from CDN servers. It has 3 parameters
                                                   <ul><li><strong>Adds &#042; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;&#042;&quot;] </li>
                                                     <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value if the origin matches one of the listed domains</strong><br>&quot;value&quot;: [&quot;domain.com&quot;, &quot;second.dom.com&quot;]</li>
                                                     <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;$http_origin&quot;]</li></ul>
                                                   </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>stale<br>type &mdash; array of strings </strong><br><br>The list of errors which the option is applied for.<br><br> Possible values:<br> 'error', 'http_403', 'http_404', 'http_429', 'http_500', 'http_502', 'http_503', 'http_504', 'invalid_header', 'timeout', 'updating'.</li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>allowedHttpMethods<br>type &mdash; array of strings </strong><br><br>The list of allowed HTTP methods.<br><br> Available methods:<br> GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.</li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>proxy_cache_methods_set<br>type &mdash; boolean </strong><br><br>Allows caching for GET, HEAD and POST requests.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                                                  <hr>
                                                  <li><strong>disable_proxy_force_ranges<br>type &mdash; boolean </strong><br><br>The option is enabled by default. It allows getting 206 responses regardless settings of an origin source.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                                                  <hr>
                                                  <li>
                                                    <strong>staticRequestHeaders</strong>
                                                    <br>
                                                    <strong>type &mdash; object</strong>
                                                    <br>
                                                    <br>
                                                    Specify up to 50 custom HTTP Headers for a CDN server to add to request.<br><br> Header name ('Header-One', 'Header-Two' in the example) is restricted to 255 symbols and can contain latin letters (A-Z, a-z), numbers (0-9), dashes, and underscores.<br><br> Header value ('Value 1', 'Value 2' in the example) is restricted to 512 symbols and can contain latin letters (a-z), numbers (0-9), spaces, underscores and symbols (-/.:). Space can be used only between words.
                                                  </li>
                                                  </ul>
                                                  <br>
                                                  <hr>
                                                  Options with untyped base class don’t have the value field but have a set of custom fields. <br>
                                                  The following options with untyped base class are available: 
                                                  <br><ul><li><strong>rewrite</strong></li>
                                                  <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>flag<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Defines flag for the Rewrite option. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>last</strong> &mdash; stops processing of the current set of ngx_http_rewrite_module directives and starts a search for a new location matching changed URI.</li>
                                                  <li><strong>break</strong> &mdash; stops processing of the current set of the Rewrite option.</li>
                                                  <li><strong>redirect</strong> &mdash; returns a temporary redirect with the 302 code; It is used when a replacement string does not start with &#34;http:&#47;&#47;&#34;, &#34;https:&#47;&#47;&#34;, or &#34;$scheme&#34;.</li>
                                                  <li><strong>permanent</strong> &mdash; returns a permanent redirect with the 301 code.</li> </ul>
                                                  </li>

                                                  <br>

                                                  <strong>body<br>
                                                  type &mdash; string&#47;regex </strong>
                                                  <br><br>
                                                  The pattern for Rewrite. At least one group should be specified.<br>
                                                  For Example: /rewrite_from/(.*) /rewrite_to/$1 <br>
                                                  Read more about Rewrite option [here](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite).
                                                  </li><hr></ul>

                                                  <ul><li><strong>force_return</strong></li>
                                                  <br>
                                                  Allows to apply custom HTTP code to the CDN content.<br><br>
                                                  Specify HTTP-code you need and text or URL if you're going to set up redirection.<br><br>
                                                  It has the following fields:
                                                  <br><br>

                                                  <strong>сode<br>
                                                  type &mdash; integer </strong>
                                                  <br><ul>
                                                   <li>Minimum value: 100</li>
                                                   <li>Maximum value: 599</li>
                                                  </ul><br>
                                                  <strong>body<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Specify the URL for redirection.
                                                  <br><hr></ul>

                                                  <ul><li><strong>country_acl</strong></li>
                                                  <br>
                                                  Control  access to the content for specified countries. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified countries.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified countries.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of countries according to ISO-3166-1.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>user_agent_acl</strong></li>
                                                  <br>
                                                  Control access to the content for specified user-agent. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified User-Agents.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified User-Agents.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of User-Agent.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>ip_address_acl</strong></li>
                                                  <br>
                                                  Control access to the CDN Resource content for specified IP addresses. <br>
                                                  <strong>If you wish to use IPs from our CDN servers IP list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL. [Read more.](#operation--public-ip-list-get) </strong> <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified IPs.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified IPs.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of IPs.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>referrer_acl</strong></li>
                                                  <br>
                                                  Control access to the CDN Resource content for specified domain names. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified domain names.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified domain names.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of domain names.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>secure_key</strong></li>
                                                  <br>
                                                  The option allows configuring an access with tokenized URLs. It makes impossible to access content without a valid (unexpired) hash key. <br>
                                                  When enabled you need to specify a key that you use to generate a token. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>key<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  The key generated on your side which will be used for URL signing. <br>

                                                  <br>

                                                  <strong>type<br>
                                                  type &mdash; integer </strong>
                                                  <br><br>
                                                  Specify the type of URL Signing. It can be either 0 or 2.<br>
                                                  You can use one of the two possible types:<br><ul>
                                                  <li><strong>Type 2</strong> Excludes end users IP from secure token generation.</li>
                                                  <li><strong>Type 0</strong> Includes end users IP to secure token generation.</li>
                                                  </li></ul>
                                                  </li></ul>
                                                  </ul>
                                          "
    example:
      [{
         id: 5,
         name: My first rule template,
         client: 7,
         deleted: false,
         options: {"allowedHttpMethods": {"enabled": true, "value": ["GET", "POST"]}, "cors": {"enabled": true, "value": ["yourdomain.com", "yourdomain2.com"]}, "fetch_compressed": {"enabled": true, "value": false}, "gzipOn": {"enabled": true, "value": true}, "brotli_compression": {"enabled": true, "value": ["text/html", "text/plain"]}, "redirect_http_to_https": {"enabled": true, "value": true}, "redirect_https_to_http": {"enabled": false, "value": true}, "hostHeader": {"enabled": true, "value": "host.com"}, "edge_cache_settings": {"enabled": true, "value": "43200s", "custom_values": {"100": "43200s"}}, "browser_cache_settings": {"enabled": true, "value": "3600s"}, "disable_cache": {"enabled": true, "value": false}, "forward_host_header": {"enabled": false, "value": false}, "cache_http_headers": {"enabled": false, "value": ["vary", "content-length", "last-modified", "connection", "accept-ranges", "content-type", "content-encoding", "etag", "cache-control", "expires", "keep-alive", "server"]}, "ignore_cookie": {"enabled": true, "value": true}, "ignoreQueryString": {"enabled": true, "value": false}, "query_params_whitelist": null, "query_params_blacklist": null, "proxy_cache_methods_set": {"enabled": true, "value": false}, "disable_proxy_force_ranges": {"enabled": true, "value": true}, "rewrite": {"body": "/(.*) /additional_path/$1", "enabled": true, "flag": "break"}, "force_return": {"enabled": true, "code": 301, "body": "http://example.com/redirect_address"}, "country_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["GB", "DE"]}, "referrer_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["google.com", "*.yandex.ru"]}, "user_agent_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["UserAgent Value"]}, "ip_address_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["192.168.1.100/32"]}, "secure_key": {"enabled": true, "key": "mysupersecretkey", "type": 2}, "slice": NULL, "stale": {"enabled": true, "value": ["http_404", "http_500"]}, "staticHeaders": {"enabled": true, "value": {"One_Header": "Value_1", "Two_Header": "Value_2"}}, "staticRequestHeaders": {"enabled": true, "value": {"Header-One": "Value 1", "Header-Two": "Value 2"}}},
         rule: (pictures)/,
         ruleType: 1,
         originGroup: null,
         template: true}]


  GetRuleTemplate:
    type: object
    properties:
      id:
        type: integer
        description: 'Rule Template ID'
      name:
        type: string
        description: "Rule Template name."
      client:
        type: integer
        description: "Client ID."
      deleted:
        type: boolean
        description: 'Status of the template. <br><br> False - template is active.'
      originGroup:
        type: integer
        description: 'ID of Origins Group that rule will be applied for.<br><br>You can use the rule without specifying ab Origins Group. In this case the rule will be applied to the CDN Resource Origins Group.'
      rule:
        type: string
        description: 'Part of path to files, extension of files or regEx, that can be used to determine how to apply rule. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      template:
        type: boolean
        description: 'Determines whether the rule is a template.'
      overrideOriginProtocol:
        type: string
        description: 'The option allows to set a different from the resource settings protocol to connect to the origin.<br><br>
                      Possible values are:
                      <ul>
                      <li><strong>null</strong> &mdash; The originProtocol setting is inherited from the resource settings.</li>
                      <li><strong>HTTPS</strong> &mdash; CDN servers connect to origin via HTTPS.</li>
                      <li><strong>HTTP</strong> &mdash; CDN servers connect to origin via HTTP.</li>
                      <li><strong>MATCH</strong> &mdash; Connection protocol is chosen automatically (content on origin source should be available for the CDN both through HTTP and HTTPS).</li>
                      </ul>'
      options:
        type: object
        description: "Each option in Rule template settings can be in one of the following states:
                                                  <br><ul><li><strong>Inherit.</strong> The option is deleted from the rule template. It means that it inherits it's value from the parent CDN-resource settings. In this case the whole option takes <strong>NULL</strong> value.</li>
                                                  <li><strong>ON (enabled: true)</strong> Option is added to rule tumplate settings and enabled.</li>
                                                  <li><strong>OFF (enabled: false)</strong> Option is added to rule template settings and disabled. You can use this state if you need to turn off inheritance of CDN resource settings for this option.</li>
                                                  </ul>
                                                  <br>
                                                  Option can be either typed base class or untyped base class.
                                                  <br>
                                                  Each option added to rule template settings should have the following mandatory request fields:
                                                  <br><strong>Enabled (boolean) </strong> - parameter indicates if option is enabled or disabled.<br>
                                                  <strong>Value  (boolean, etc.) </strong> - parameter indicates the actual option value.
                                                  <br>
                                                  <hr>
                                                  The following options with typed base class are available: <br><ul>
                                                   <li><strong>browser_cache_settings<br>type &mdash; string</strong><br><br>
                                                   The cache expiration time for customers' browsers in seconds. Use '0s' to disable caching.<br>
                                                   The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Responses with other codes will not be cached.
                                                   <br>
                                                   <hr>
                                                   <li><strong>edge_cache_settings</strong><br>
                                                   The cache expiration time for CDN servers.<br><br>
                                                   It has the following fields:
                                                    <ul>
                                                      <li>
                                                        <strong>value</strong><br>
                                                        <strong>type &mdash; string </strong><br><br>
                                                        Caching time for a response with codes 200, 206, 301, 302. Responses with codes 4xx, 5xx will not be cached. Use '0s' disable to caching.<br>
                                                        Use custom_values field to specify a custom caching time for a response with specific codes.<br><br>
                                                      </li>
                                                      <li>
                                                        <strong>custom_values</strong><br>
                                                        <strong>type &mdash; object </strong><br><br>
                                                        Caching time for a response with specific codes. These settings have a higher priority than the value field.<br>
                                                        Response code ('304', '404' for example). Use 'any' to specify caching time for all response codes.<br>
                                                        Caching time in seconds ('0s', '600s' for example). Use '0s' to disable caching for a specific response code.<br><br>
                                                      </li>
                                                      <li>
                                                        <strong>default</strong><br>
                                                        <strong>type &mdash; string </strong><br><br>
                                                        Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers.<br>
                                                        Responses with other codes will not be cached.<br><br>
                                                      </li>
                                                    </ul>
                                                   Fields value and default cannot be used simultaneously. Only one of these fields can be used at the same time.
                                                  <br>
                                                  <hr>
                                                  <li><strong>disable_cache<br>type &mdash; boolean </strong><br><br>
                                                  When enabled the content caching is completely disabled.<br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>cache_http_headers<br>type &mdash; array of strings </strong><br>
                                                  List HTTP Headers that must be included in the response.<br>
                                                  <br>
                                                  <hr>
                                                  <li><strong>ignore_cookie<br>type &mdash; boolean </strong><br><br>
                                                  By default, files pulled from an origin source with cookies are not cached in a CDN. Enable this option to cache such objects.<br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li>
                                                    <strong>ignoreQueryString<br>type &mdash; boolean </strong>
                                                    <br>
                                                    <br>
                                                    This option determines how files with different query strings will be cached: either as one object (when this option is enabled) or as different objects (when this option is disabled).
                                                    <br>
                                                    <br>
                                                    It has two possible values:
                                                    <ul>
                                                      <li>
                                                        <strong>true</strong> &mdash; option is enabled.
                                                      </li>
                                                      <li>
                                                        <strong>false</strong> &mdash; option is disabled.
                                                      </li>
                                                    </ul>
                                                  <br>
                                                  <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr>
                                                  <li>
                                                   <strong>query_params_whitelist</strong><br/>
                                                   <strong>type &mdash; array of strings</strong>
                                                   <br/>
                                                   <br/>
                                                   Specify list of query strings. Files with those query strings will be cached as different objects.
                                                   <br/>
                                                   <br/>
                                                   <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr/>
                                                  <li>
                                                    <strong>query_params_blacklist</strong><br/>
                                                    <strong>type &mdash; array of strings</strong>
                                                    <br/>
                                                    <br/>
                                                    Specify list of query strings. Files with those query strings will be cached as one object.
                                                    <br/>
                                                    <br/>
                                                    <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
                                                  </li>
                                                  <br/>
                                                  <hr/>
                                                  <li><strong>slice<br>type &mdash; boolean </strong><br><br> Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.The origin must support HTTP Range requests. The option is based on the [Slice](https://nginx.org/en/docs/http/ngx_http_slice_module.html) module. By default the option is disabled. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>fetch_compressed<br>type &mdash; boolean </strong><br><br>
                                                  A CDN request and cache already compressed content. Your server should support compression. CDN servers won't ungzip your content even if a user's browser doesn't accept compression (nowadays almost all browsers support it). By default, option is disabled (enabled: false).<br>
                                                  <strong>Not supported with gzipON option enabled. Only one of these options can be used at the same time. fetch_compressed overrides gzipOn.</strong><br><br>
                                                  It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>gzipOn<br>type &mdash; boolean </strong><br><br>The option allows to compress content with gzip on the CDN`s end. CDN servers will request only uncompressed content from the origin.<br><br> <strong> Not supported with fetch_compressed</strong>. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>brotli_compression<br>type &mdash; array of strings </strong>
                                                    <br><br> The option allows to compress content with brotli on the CDN's end.
                                                    <br> Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
                                                    <br><br> Possible values:
                                                    <ul>
                                                      <li> application/javascript </li>
                                                      <li> application/json </li>
                                                      <li> application/vnd.ms-fontobject </li>
                                                      <li> application/x-font-ttf </li>
                                                      <li> application/x-javascript </li>
                                                      <li> application/xml </li>
                                                      <li> application/xml+rss </li>
                                                      <li> image/x-icon </li>
                                                      <li> text/css </li>
                                                      <li> text/html <strong>(mandatory value always should be listed)</strong> </li>
                                                      <li> text/javascript </li>
                                                      <li> text/plain </li>
                                                      <li> text/xml </li>
                                                    </ul>
                                                  </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>redirect_http_to_https<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTP requests to HTTPS.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>redirect_https_to_http<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTPS requests to HTTP.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>hostHeader<br>type &mdash; string </strong><br><br>Specify the Host header that CDN servers use when request content from an origin server.
                                                  Your server must be able to process requests with the chosen header.
                                                  If the option is in NULL state Host Header value is taken from the parent CDN resource's value.<br><br>
                                                  <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong>
                                                  </li><br>
                                                  <hr>
                                                  <li>
                                                    <strong>forward_host_header</strong><br>
                                                    <strong>type &mdash; boolean</strong><br><br>
                                                    When a CDN requests content from an origin server the option allows forwarding the Host header used in the request made to a CDN.<br><br>
                                                    <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br><br>
                                                    It has two possible values:
                                                    <ul>
                                                      <li>true &mdash; option is enabled.</li>
                                                      <li>false &mdash; option is disabled.</li>
                                                    </ul>
                                                  </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>staticHeaders<br>type &mdash; object </strong><br><br>Specify custom HTTP Headers that a CDN server adds to response.</li>
                                                  <br>
                                                  <hr>
                                                 <li><strong>cors<br>type &mdash; array of strings </strong><br>
                                                   The option adds the Access-Control-Allow-Origin header to responses from CDN servers. It has 3 parameters
                                                   <ul><li><strong>Adds &#042; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;&#042;&quot;] </li>
                                                     <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value if the origin matches one of the listed domains</strong><br>&quot;value&quot;: [&quot;domain.com&quot;, &quot;second.dom.com&quot;]</li>
                                                     <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;$http_origin&quot;]</li></ul>
                                                   </li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>stale<br>type &mdash; array of strings </strong><br><br>The list of errors which the option is applied for.<br><br> Possible values:<br> 'error', 'http_403', 'http_404', 'http_429', 'http_500', 'http_502', 'http_503', 'http_504', 'invalid_header', 'timeout', 'updating'.</li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>allowedHttpMethods<br>type &mdash; array of strings </strong><br><br>The list of allowed HTTP methods.<br><br> Available methods:<br> GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.</li>
                                                  <br>
                                                  <hr>
                                                  <li><strong>proxy_cache_methods_set<br>type &mdash; boolean </strong><br><br>Allows caching for GET, HEAD and POST requests.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                                                  <hr>
                                                  <li><strong>disable_proxy_force_ranges<br>type &mdash; boolean </strong><br><br>The option is enabled by default. It allows getting 206 responses regardless settings of an origin source.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
                                                  <hr>
                                                  <li>
                                                    <strong>staticRequestHeaders</strong>
                                                    <br>
                                                    <strong>type &mdash; object</strong>
                                                    <br>
                                                    <br>
                                                    Specify up to 50 custom HTTP Headers for a CDN server to add to request.<br><br> Header name ('Header-One', 'Header-Two' in the example) is restricted to 255 symbols and can contain latin letters (A-Z, a-z), numbers (0-9), dashes, and underscores.<br><br> Header value ('Value 1', 'Value 2' in the example) is restricted to 512 symbols and can contain latin letters (a-z), numbers (0-9), spaces, underscores and symbols (-/.:). Space can be used only between words.
                                                  </li>
                                                  </ul>
                                                  <br>
                                                  <hr>
                                                  Options with untyped base class don’t have the value field but have a set of custom fields. <br>
                                                  The following options with untyped base class are available: 
                                                  <br><ul><li><strong>rewrite</strong></li>
                                                  <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>flag<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Defines flag for the Rewrite option. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>last</strong> &mdash; stops processing of the current set of ngx_http_rewrite_module directives and starts a search for a new location matching changed URI.</li>
                                                  <li><strong>break</strong> &mdash; stops processing of the current set of the Rewrite option.</li>
                                                  <li><strong>redirect</strong> &mdash; returns a temporary redirect with the 302 code; It is used when a replacement string does not start with &#34;http:&#47;&#47;&#34;, &#34;https:&#47;&#47;&#34;, or &#34;$scheme&#34;.</li>
                                                  <li><strong>permanent</strong> &mdash; returns a permanent redirect with the 301 code.</li> </ul>
                                                  </li>

                                                  <br>

                                                  <strong>body<br>
                                                  type &mdash; string&#47;regex </strong>
                                                  <br><br>
                                                  The pattern for Rewrite. At least one group should be specified.<br>
                                                  For Example: /rewrite_from/(.*) /rewrite_to/$1 <br>
                                                  Read more about Rewrite option [here](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite).
                                                  </li><hr></ul>

                                                  <ul><li><strong>force_return</strong></li>
                                                  <br>
                                                  Allows to apply custom HTTP code to the CDN content.<br><br>
                                                  Specify HTTP-code you need and text or URL if you're going to set up redirection.<br><br>
                                                  It has the following fields:
                                                  <br><br>

                                                  <strong>сode<br>
                                                  type &mdash; integer </strong>
                                                  <br><ul>
                                                   <li>Minimum value: 100</li>
                                                   <li>Maximum value: 599</li>
                                                  </ul><br>
                                                  <strong>body<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Specify the URL for redirection.
                                                  <br><hr></ul>

                                                  <ul><li><strong>country_acl</strong></li>
                                                  <br>
                                                  Control  access to the content for specified countries. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified countries.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified countries.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of countries according to ISO-3166-1.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>user_agent_acl</strong></li>
                                                  <br>
                                                  Control access to the content for specified user-agent. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified User-Agents.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified User-Agents.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of User-Agent.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>ip_address_acl</strong></li>
                                                  <br>
                                                  Control access to the CDN Resource content for specified IP addresses. <br>
                                                  <strong>If you wish to use IPs from our CDN servers IP list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL. [Read more.](#operation--public-ip-list-get) </strong> <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified IPs.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified IPs.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of IPs.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>referrer_acl</strong></li>
                                                  <br>
                                                  Control access to the CDN Resource content for specified domain names. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>policy_type<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  Can be &#34;allow&#34; or &#34;deny&#34;. <br>
                                                  Possible values are:<br>                <ul>
                                                  <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified domain names.</li>
                                                  <li><strong>DENY</strong> &mdash; Block access to all except for specified domain names.</li>
                                                  </li></ul>

                                                  <br>

                                                  <strong>excepted_values<br>
                                                  type &mdash; array of strings </strong>
                                                  <br><br>
                                                  List of domain names.<br>
                                                  </li><hr></ul>

                                                  <ul><li><strong>secure_key</strong></li>
                                                  <br>
                                                  The option allows configuring an access with tokenized URLs. It makes impossible to access content without a valid (unexpired) hash key. <br>
                                                  When enabled you need to specify a key that you use to generate a token. <br>
                                                  It has the following fields:

                                                  <br>

                                                  <strong>key<br>
                                                  type &mdash; string </strong>
                                                  <br><br>
                                                  The key generated on your side which will be used for URL signing. <br>

                                                  <br>

                                                  <strong>type<br>
                                                  type &mdash; integer </strong>
                                                  <br><br>
                                                  Specify the type of URL Signing. It can be either 0 or 2.<br>
                                                  You can use one of the two possible types:<br><ul>
                                                  <li><strong>Type 2</strong> Excludes end users IP from secure token generation.</li>
                                                  <li><strong>Type 0</strong> Includes end users IP to secure token generation.</li>
                                                  </li></ul>
                                                  </li></ul>
                                                  </ul>
                                          "
    example:
      {id: 5,
       name: My first rule template,
       client: 7,
       deleted: false,
       options: {"allowedHttpMethods": {"enabled": true, "value": ["GET", "POST"]}, "cors": {"enabled": true, "value": ["yourdomain.com", "yourdomain2.com"]}, "fetch_compressed": {"enabled": true, "value": false}, "gzipOn": {"enabled": true, "value": true}, "brotli_compression": {"enabled": true, "value": ["text/html", "text/plain"]}, "redirect_http_to_https": {"enabled": true, "value": true}, "redirect_https_to_http": {"enabled": false, "value": true}, "hostHeader": {"enabled": true, "value": "host.com"}, "edge_cache_settings": {"enabled": true, "value": "43200s", "custom_values": {"100": "43200s"}}, "browser_cache_settings": {"enabled": true, "value": "3600s"}, "disable_cache": {"enabled": true, "value": false}, "cache_http_headers": {"enabled": false, "value": ["vary", "content-length", "last-modified", "connection", "accept-ranges", "content-type", "content-encoding", "etag", "cache-control", "expires", "keep-alive", "server"]}, "ignore_cookie": {"enabled": true, "value": true}, "ignoreQueryString": {"enabled": true, "value": false}, "query_params_whitelist": null, "query_params_blacklist": null, "forward_host_header": {"enabled": false, "value": false}, "proxy_cache_methods_set": {"enabled": true, "value": false}, "disable_proxy_force_ranges": {"enabled": true, "value": true}, "rewrite": {"body": "/(.*) /additional_path/$1", "enabled": true, "flag": "break"}, "force_return": {"enabled": true, "code": 301, "body": "http://example.com/redirect_address"}, "country_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["GB", "DE"]}, "referrer_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["google.com", "*.yandex.ru"]}, "user_agent_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["UserAgent Value"]}, "ip_address_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["192.168.1.100/32"]}, "secure_key": {"enabled": true, "key": "mysupersecretkey", "type": 2}, "slice": NULL, "stale": {"enabled": true, "value": ["http_404", "http_500"]}, "staticHeaders": {"enabled": true, "value": {"One_Header": "Value_1", "Two_Header": "Value_2"}}, "staticRequestHeaders": {"enabled": true, "value": {"Header-One": "Value 1", "Header-Two": "Value 2"}}},
       rule: (pictures)/,
       ruleType: 1,
       originGroup: null,
       template: true}


  ChangeRuleTemplate:
    type: object
    properties:
      name:
        type: string
        description: "Rule Template name."
      rule:
        type: string
        description: 'Part of path to files, extension of files or regEx, that can be used to determine how to apply rule. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
      options:
        type: object
        description: "Descriptions of the parameters can be found [here](#operation--resources--id--rules-get)."

    example:
      name: My first rule template
      rule: folder/images/*.png
      ruleType: 0

  CreateRuleTemplates:
    type: object
    properties:
      name:
        type: string
        description: 'Template name'
      rule:
        type: string
        description: 'Part of path to files, extension of files or regEx, that can be used to determine how to apply rule. <br/><br/>By default, we add a leading forward slash to any rule pattern. Specify a pattern without a forward slash.'
      ruleType:
        type: integer
        description: "Type of rule. The rule is applied if the requested URI matches the rule parameter. <br> It has two possible values: <ul><li><strong>Type 0</strong> &mdash; Specify a URI or its part without a domain name. </li><li><strong>Type 1</strong> &mdash; RegEx </li></ul>"
    example:
      name: "All images template"
      rule: "folder/images/*.png"
      ruleType: 1


  AddSSL:
    type: object
    properties:
      name:
        type: string
        description: 'Name of the SSL certificate. Must be unique.'
      sslCertificate:
        type: string
        description: 'The public part of the SSL certificate. All chain of the SSL certificate should be added.'
      sslPrivateKey:
        type: string
        description: 'The private key of the SSL certificate.'
    example:
      name: New certificate
      sslCertificate: "-----BEGIN CERTIFICATE-----\nMIIFWzCCBEOgAwIBAgISBK6qoNitg//89H/YJamujpWlMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODExMTMxMjQwMDJaFw0x\nOTAyMTExMjQwMDJaMBwxGjAYBgNVBAMTEWNkbjIudG50LWNsdWIuY29tMIIBIjAN\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzaHExDEXNSf6ELS0WUR7qq8gs9cc\nxx99sM2zs3Jld0twPmuldkVNe5xte/Hj03r4SesfOBczR7pn+t60YujPvUQDN8lx\nWYpvRuetOneyf4gNPatwzR/W1GWGlahet1xPVYGrttqL4gCJeShIXvU4aCyzW941\nPt0wCs+bg9u+59fXFkigWrWJPkwbR7bJ14XTStYynMbYLfCg+VPeGWj3d8wOhQcf\nAD86o8TLTbVfK2BDXwS5S8Dgf5u8g+WvmVHYDIkYKCxcLj0jP61Y7uHoFbSg41oN\nA9yPOa+0cYxA7U702V2WjxbfIeATYtNLZvH17lk+DYlQl8q3MLwguqZdgwIDAQAB\niIqI2xquGONtHFDOKJvy1O2qYTVRtNRVZqhc1ol+mw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nKOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\n-----END CERTIFICATE-----\n"
      sslPrivateKey: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDZcNCZiNNHfX2O\ndZpf12mv2rAZwqGZBAdpox0wntEPK3JciQ7ZRloLJeHuCNIJs9MidnH7Xk8zveju\nmab6HmfIzvMJAAm88OYWMFQRiYe1ggJEHMe7yYPQbtXwTqWDYdWmjPPma3Ujqqmb\nhmVX2rsYILD7cUjS+e0Ucfqx3QODQj/aujTt1rS0gFhJ0soY5m+C6VimPCx4Bjyw\n5rhtskJDRrfXxrIhVXOvSPFRyxDSfjt3win8vjhhZ3oFPWgrl9lVhn0zaB5hjDsd\n-----END PRIVATE KEY-----\n"


  GetSSLAnswer:
    type: object
    properties:
      id:
        type: integer
        description: 'ID of SSL certificate.'
      deleted:
        type: string
        description: 'Status of the SSL certificate. SSL certificate with the Deleted status can be chosen for a CDN Resource.'
      cert_issuer:
        type: string
        description: 'The name of the certification center that issued the SSL certificate.'
      cert_subject_cn:
        type: string
        description: 'The domain name that current SSL certificate secures.'
      validity_not_before:
        type: string
        description: 'Date when certificate become valid.'
      validity_not_after:
        type: string
        description: 'Date when certificate become untrusted.'
      hasRelatedResources:
        type: boolean
        description: 'The CDN Resource where this certificate is used.'
      name:
        type: string
        description: 'Name of the certificate.'
      automated:
        type: boolean
        description: 'The way SSL certificate was issued.<br>
                      Two possible values:<br>
                      <ul>
                        <li>
                          <strong>true</strong> – (default) Let’s Encrypt certificate issued automatically.
                        </li>
                        <li>
                          <strong>false</strong> – certificate added by a user.
                        </li>
                      </ul>'
    example:
      name: Some certifacate
      deleted: false
      cert_issuer: Some certification center
      cert_subjeck_cn: mydomain.name
      validity_not_before: 2016-09-17T18:06:01Z
      validity_not_after: 2017-08-21T11:02:00Z
      hasRelatedResources: true
      automated: false

  GetAllResources:
    type: object
    properties:
      id:
        type: integer
        description: 'CDN Resource ID.'
      deleted:
        type: string
        description: 'The field indicates that your resource deleted.'
      enabled:
        type: boolean
        description: 'The field shows if your CDN Resource enabled or disabled.<br><ul><li><strong>Enabled</strong> &mdash; CDN Resource is actived. Content is being delivered.</li><li><strong>Disabled</strong> &mdash; CDN Resource is deactivated and content is not being delivered.</li></ul>'
      companyName:
        type: string
        description: 'The company name.'
      status:
        type: string
        description: 'Status of a CDN resource. The possible values are active, suspended, processed.<br/>
                      <strong>Active</strong> status means that the CDN resource is ready to use.<br/>
                      <strong>Suspended</strong> status means your CDN Resource is disabled because the service is stopped.<br/>
                      <strong>Processed</strong> means that your CDN resource is processing and is not ready to use yet. Please wait for active or suspended status before any actions.<br/>
                      In case of questions contact us at support@gcorelabs.com'
      client:
        type: integer
        description: 'ID of your control panel.'
      originGroup:
        type: integer
        description: 'ID of the Origins Group.'
      origin:
        type: string
        description: 'A domain name or IP address of your origin source. Specify port if custom.'
      cname:
        type: string
        description: 'An alias that will be used for content delivery through a CDN. Use this alias only having added it to your DNS settings.'
      SecondaryHostnames:
        type: array
        description: 'List of additional CNAMEs.'
        items:
          type: string
      createdAt:
        type: string
        description: 'Shows the date when the CDN Resource was created.'
      updatedAt:
        type: string
        description: 'Shows the date when the CDN Resource was changed.'

    example:
      [{ id: 220,
         deleted: false,
         enabled: true,
         companyName: Your Company,
         status: active,
         client: 170,
         originGroup: 80,
         origin: Your site,
         cname: cdn.site.com,
         secondaryHostnames: [
           "cdn1.yoursite.com",
           "cdn2.yoursite.com"
         ],
         createdAt: 2017-06-10T10:30:04.954354Z,
         updatedAt: 2017-06-14T05:05:42.065221Z }]

  GetResource:
    type: object
    properties:
      id:
        type: integer
        description: 'CDN Resource ID.'
      deleted:
        type: string
        description: 'Field indicates that your resource deleted.'
      enabled:
        type: boolean
        description: 'Field shows if your CDN Resource enabled or disabled.<br><ul><li><strong>Enabled</strong> &mdash; Resource is actived. Content is being deliverred.</li><li><strong>Disabled</strong> &mdash; CDN Resource is deactivated and your users receive 403 code.</li></ul>'
      companyName:
        type: string
        description: 'Your company name.'
      status:
        type: string
        description: 'Status of a CDN resource. The possible values are active, suspended, processed.<br/>
                      <strong>Active</strong> status means that the CDN resource is ready to use.<br/>
                      <strong>Suspended</strong> status means your CDN Resource is disabled because the service is stopped.<br/>
                      <strong>Processed</strong> means that your CDN resource is processing and is not ready to use yet. Please wait for active or suspended status before any actions.<br/>
                      In case of questions contact us at support@gcorelabs.com'
      client:
        type: integer
        description: 'ID of your control panel.'
      originGroup:
        type: integer
        description: 'ID of the Origins Group.'
      origin:
        type: string
        description: 'ID of the Origin Source.'
      cname:
        type: string
        description: 'An alias that will be used for content delivery through a CDN. Use this alias only having added it to your DNS settings.'
      SecondaryHostnames:
        type: array
        description: 'List of additional CNAMEs.'
        items:
          type: string
      createdAt:
        type: string
        description: 'Shows the date when the CDN Resource was created.'
      updatedAt:
        type: string
        description: 'Shows the date when the CDN Resource was changed.'
      sslEnabled:
        type: boolean
        description: 'Use HTTPS protocol for content delivery.<br>
                      It has two possible values:<br>
                      <ul>
                        <li>
                          <strong>true</strong> – HTTPS is enabled.
                        </li>
                        <li>
                          <strong>false</strong> – HTTPS is disabled.
                        </li>
                      </ul>
                      <br>
                      Consider combinations of parameters sslEnabled and ssl_automated.<br>
                      It has four possible combinations:<br>
                      <ul>
                        <li>
                          “sslEnabled”: true, “ssl_automated”: true — resource uses HTTPS protocol for content delivery and Let’s Encrypt SSL certificate.
                        </li>
                        <li>
                          “sslEnabled”: true, “ssl_automated”: false — resource uses HTTPS protocol for content delivery and user SSL certificate.
                        </li>
                        <li>
                          “sslEnabled”: false, “ssl_automated”: true — Let&#39;s Encrypt certificate is being issued.
                        </li>
                        <li>
                          “sslEnabled”: false, “ssl_automated”: false — resource doesn’t use HTTPS protocol for content delivery.
                        </li>
                      </ul>'
      ssl_automated:
        type: boolean
        description: 'Use а free Let’s Encrypt SSL certificate.<br>
                      It has two possible values:<br>
                      <ul>
                        <li>
                          <strong>true</strong> — Let’s Encrypt SSL certificate is used.
                        </li>
                        <li>
                          <strong>false</strong> — Let’s Encrypt SSL certificate isn’t used.
                        </li>
                      </ul>
                      <br>
                      Consider combinations of parameters sslEnabled and ssl_automated.<br>
                      It has four possible combinations:<br>
                      <ul>
                        <li>
                          “sslEnabled”: true, “ssl_automated”: true — resource uses HTTPS protocol for content delivery and Let’s Encrypt SSL certificate.
                        </li>
                        <li>
                          “sslEnabled”: true, “ssl_automated”: false — resource uses HTTPS protocol for content delivery and user SSL certificate.
                        </li>
                        <li>
                          “sslEnabled”: false, “ssl_automated”: true — Let&#39;s Encrypt certificate is being issued.
                        </li>
                        <li>
                          “sslEnabled”: false, “ssl_automated”: false — resource doesn’t use HTTPS protocol for content delivery.
                        </li>
                      </ul>'

    example:
      id: 220
      deleted: false
      enabled: true
      companyName: Your Company
      status: active
      client: 170
      originGroup: 80
      origin: Your site
      cname: cdn.site.com
      secondaryHostnames: [
        "cdn1.yoursite.com",
        "cdn2.yoursite.com"
      ]
      createdAt: 2017-06-10T10:30:04.954354Z
      updatedAt: 2017-06-14T05:05:42.065221Z
      sslEnabled: false
      ssl_automated: true

  ChangeResources:
    type: object
    properties:
      enabled:
        type: boolean
        description: 'The field shows if your CDN Resource enabled or disabled.<br><ul><li><strong>Enabled</strong> &mdash; Resource is actived. Content is being deliverred.</li><li><strong>Disabled</strong> &mdash; CDN Resource is deactivated. Content is not being deliverred.</li></ul>'
      originGroup:
        type: integer
        description: "ID of the Origins Group. Use one of your [Origins Group](/#operation--originGroups-get) or [create](/#operation--originGroups-post) a new one. <br><br> You can use either 'origin' parameter or 'originGroup' in the request."
      origin:
        type: string
        description: "Domain name or IP of your origin source. Specify a port if custom.<br><br> You can use either 'origin' parameter or 'originGroup' in the request."
      SecondaryHostnames:
        type: array
        description: 'List of additional CNAMEs.'
        items:
          type: string
      sslEnabled:
        type: boolean
        description: "Use HTTPS protocol for content delivery. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; HTTPS is enabled.</li><li><strong>false</strong> &mdash; HTTPS is disabled.</li></ul>"
      sslData:
        type: integer
        description: "Specify the SSL Certificate ID which should be used for the CDN Resource.<br><br>Must be used only with 'sslEnabled':true"
      originProtocol:
        type: string
        description: 'This option defines the protocol that will be used by CDN servers to request content from an origin source. If not specified, we will use HTTP to connect to an origin server. <br><br> Possible values are: <ul><li><strong>HTTPS</strong> &mdash; CDN servers will connect to your origin via HTTPS.</li><li><strong>HTTP</strong> &mdash; CDN servers will connect to your origin via HTTP.</li><li><strong>MATCH</strong> &mdash; Connection protocol will be chosen automatically (content on the origin source should be available for the CDN both through HTTP and HTTPS).</li></ul>'
      logTarget:
        type: string
        description: 'Raw log delivery. You need to specify the IP address (or domain name) and the port (host: port), where we will send logs in real time. To accept logs configure your server to receive logs through Syslog.'
      options:
        type: object
        description:  "Each option in CDN resource settings can be in one of the following states:
        <br><ul><li><strong>Deleted.</strong> The option is deleted from the CDN-resource. In this case the whole option takes <strong>NULL</strong> value.</li>
        <li><strong>ON (enabled: true)</strong> Option is added to CDN resource settings and enabled.</li>
        <li><strong>OFF (enabled: false)</strong> Option is added to CDN resource settings and disabled.</li>
        </ul>
        <br>
        Option can be either typed base class or untyped base class.
        <br>
        Each option added to CDN resource settings should have the following mandatory request fields:
        <br><strong>Enabled (boolean) </strong> - parameter indicates if option is enabled or disabled.<br>
        <strong>Value  (boolean, etc.) </strong> - parameter indicates the actual option value.
        <br>
        <hr>
        The following options with typed base class are available: <br><ul>
         <li><strong>browser_cache_settings<br>type &mdash; string</strong><br><br>
         The cache expiration time for customers' browsers in seconds. Use '0s' to disable caching.<br>
         The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Responses with other codes will not be cached.
         <br>
         <hr>
         <li><strong>edge_cache_settings</strong><br>
         The cache expiration time for CDN servers.<br><br>
         It has the following fields:
          <ul>
            <li>
              <strong>value</strong><br>
              <strong>type &mdash; string </strong><br><br>
              Caching time for a response with codes 200, 206, 301, 302. Responses with codes 4xx, 5xx will not be cached. Use '0s' disable to caching.<br>
              Use custom_values field to specify a custom caching time for a response with specific codes.<br><br>
            </li>
            <li>
              <strong>custom_values</strong><br>
              <strong>type &mdash; object </strong><br><br>
              Caching time for a response with specific codes. These settings have a higher priority than the value field.<br>
              Response code ('304', '404' for example). Use 'any' to specify caching time for all response codes.<br>
              Caching time in seconds ('0s', '600s' for example). Use '0s' to disable caching for a specific response code.<br><br>
            </li>
            <li>
              <strong>default</strong><br>
              <strong>type &mdash; string </strong><br><br>
              Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers.<br>
              Responses with other codes will not be cached.<br><br>
            </li>
          </ul>
         Fields value and default cannot be used simultaneously. Only one of these fields can be used at the same time.
        <br>
        <hr>
        <li><strong>disable_cache<br>type &mdash; boolean </strong><br><br>
        When enabled the content caching is completely disabled.<br><br>
        It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>cache_http_headers<br>type &mdash; array of strings </strong><br>
        List HTTP Headers that must be included in the response.<br>
        <br>
        <hr>
        <li><strong>ignore_cookie<br>type &mdash; boolean </strong><br><br>
        By default, files pulled from an origin source with cookies are not cached in a CDN. Enable this option to cache such objects.<br><br>
        It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li>
          <strong>ignoreQueryString<br>type &mdash; boolean </strong>
          <br>
          <br>
          This option determines how files with different query strings will be cached: either as one object (when this option is enabled) or as different objects (when this option is disabled).
          <br>
          <br>
          It has two possible values:
          <ul>
            <li>
              <strong>true</strong> &mdash; option is enabled.
            </li>
            <li>
              <strong>false</strong> &mdash; option is disabled.
            </li>
          </ul>
        <br>
        <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
        </li>
        <br/>
        <hr>
        <li>
         <strong>query_params_whitelist</strong><br/>
         <strong>type &mdash; array of strings</strong>
         <br/>
         <br/>
         Specify list of query strings. Files with those query strings will be cached as different objects.
         <br/>
         <br/>
         <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
        </li>
        <br/>
        <hr/>
        <li>
          <strong>query_params_blacklist</strong><br/>
          <strong>type &mdash; array of strings</strong>
          <br/>
          <br/>
          Specify list of query strings. Files with those query strings will be cached as one object.
          <br/>
          <br/>
          <strong>Options ignoreQueryString, query_params_whitelist and query_params_blacklist can't be enabled simultaneously.</strong>
        </li>
        <br/>
        <hr/>
        <li><strong>slice<br>type &mdash; boolean </strong><br><br> Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.The origin must support HTTP Range requests. The option is based on the [Slice](https://nginx.org/en/docs/http/ngx_http_slice_module.html) module. By default the option is disabled. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>fetch_compressed<br>type &mdash; boolean </strong><br><br>
        A CDN request and cache already compressed content. Your server should support compression. CDN servers won't ungzip your content even if a user's browser doesn't accept compression (nowadays almost all browsers support it). By default, option is disabled (enabled: false).<br>
        <strong>Not supported with gzipON option enabled. Only one of these options can be used at the same time. fetch_compressed overrides gzipOn.</strong><br><br>
        It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>gzipOn<br>type &mdash; boolean </strong><br><br>The option allows to compress content with gzip on the CDN`s end. CDN servers will request only uncompressed content from the origin.<br><br> <strong> Not supported with fetch_compressed</strong>. <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>brotli_compression<br>type &mdash; array of strings </strong>
          <br><br> The option allows to compress content with brotli on the CDN's end.
          <br> Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
          <br><br> Possible values:
          <ul>
            <li> application/javascript </li>
            <li> application/json </li>
            <li> application/vnd.ms-fontobject </li>
            <li> application/x-font-ttf </li>
            <li> application/x-javascript </li>
            <li> application/xml </li>
            <li> application/xml+rss </li>
            <li> image/x-icon </li>
            <li> text/css </li>
            <li> text/html <strong>(mandatory value always should be listed)</strong> </li>
            <li> text/javascript </li>
            <li> text/plain </li>
            <li> text/xml </li>
          </ul>
        </li>
        <br>
        <hr>
        <li><strong>redirect_http_to_https<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTP requests to HTTPS.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>redirect_https_to_http<br>type &mdash; boolean </strong><br><br>When enabled redirects HTTPS requests to HTTP.<br><br> <strong> Options redirect_http_to_https and redirect_https_to_http can't both be enabled.</strong> <br><br> It has two possible values: <ul><li><strong>true</strong> &mdash; option is enabled.</li><li><strong>false</strong> &mdash; option is disabled.</li></ul></li>
        <br>
        <hr>
        <li><strong>hostHeader<br>type &mdash; string </strong><br><br>Specify the Host header that CDN servers use when request content from an origin server.
        Your server must be able to process requests with the chosen header.
        If the option is in NULL state Host Header value is taken from the CNAME field.<br><br>
        <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong>
        </li><br>
        <hr>
        <li>
          <strong>forward_host_header</strong><br>
          <strong>type &mdash; boolean</strong><br><br>
          When a CDN requests content from an origin server the option allows forwarding the Host header used in the request made to a CDN.<br><br>
          <strong>Options hostHeader and forward_host_header cannot be used simultaneously. Only one of these options can be used at the same time.</strong><br><br>
          It has two possible values:
          <ul>
            <li>true &mdash; option is enabled.</li>
            <li>false &mdash; option is disabled.</li>
          </ul>
        </li>
        <br>
        <hr>
        <li><strong>staticHeaders<br>type &mdash; object </strong><br><br>Specify custom HTTP Headers that a CDN server adds to response.</li>
        <br>
        <hr>
        <li><strong>cors<br>type &mdash; array of strings </strong><br>
          The option adds the Access-Control-Allow-Origin header to responses from CDN servers. It has 3 parameters
          <ul><li><strong>Adds &#042; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;&#042;&quot;] </li>
            <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value if the origin matches one of the listed domains</strong><br>&quot;value&quot;: [&quot;domain.com&quot;, &quot;second.dom.com&quot;]</li>
            <li><strong>Adds &quot;$http_origin&quot; as the Access-Control-Allow-Origin header value</strong><br>&quot;value&quot;: [&quot;$http_origin&quot;]</li></ul>
          </li>
        <br>
        <hr>
        <li><strong>stale<br>type &mdash; array of strings </strong><br><br>The list of errors which the option is applied for.<br><br> Possible values:<br> 'error', 'http_403', 'http_404', 'http_429', 'http_500', 'http_502', 'http_503', 'http_504', 'invalid_header', 'timeout', 'updating'.</li>
        <br>
        <hr>
        <li><strong>allowedHttpMethods<br>type &mdash; array of strings </strong><br><br>The list of allowed HTTP methods.<br><br> Available methods:<br> GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.</li>
        <br>
        <hr>
        <li><strong>proxy_cache_methods_set<br>type &mdash; boolean </strong><br><br>Allows caching for GET, HEAD and POST requests.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
        <hr>
        <li><strong>disable_proxy_force_ranges<br>type &mdash; boolean </strong><br><br>The option is enabled by default. It allows getting 206 responses regardless settings of an origin source.<br><br>It has two possible values:<ul><li><strong>true</strong> &mdash; option is enabled</li><li><strong>false</strong> &mdash; option is disabled</li></ul></li>
        <hr>
        <li>
          <strong>staticRequestHeaders</strong>
          <br>
          <strong>type &mdash; object</strong>
          <br>
          <br>
          Specify up to 50 custom HTTP Headers for a CDN server to add to request.<br><br> Header name ('Header-One', 'Header-Two' in the example) is restricted to 255 symbols and can contain latin letters (A-Z, a-z), numbers (0-9), dashes, and underscores.<br><br> Header value ('Value 1', 'Value 2' in the example) is restricted to 512 symbols and can contain latin letters (a-z), numbers (0-9), spaces, underscores and symbols (-/.:). Space can be used only between words.
        </ul>
        <br>
        <hr>
        Options with untyped base class don’t have the value field but have a set of custom fields. <br>
        The following options with untyped base class are available: 
        <br><ul><li><strong>rewrite</strong></li>
        <br>
        It has the following fields:

        <br>

        <strong>flag<br>
        type &mdash; string </strong>
        <br><br>
        Defines flag for the Rewrite option. <br>
        Possible values are:<br>                <ul>
        <li><strong>last</strong> &mdash; stops processing of the current set of ngx_http_rewrite_module directives and starts a search for a new location matching changed URI.</li>
        <li><strong>break</strong> &mdash; stops processing of the current set of the Rewrite option.</li>
        <li><strong>redirect</strong> &mdash; returns a temporary redirect with the 302 code; It is used when a replacement string does not start with &#34;http:&#47;&#47;&#34;, &#34;https:&#47;&#47;&#34;, or &#34;$scheme&#34;.</li>
        <li><strong>permanent</strong> &mdash; returns a permanent redirect with the 301 code.</li> </ul>
        </li>

        <br>

        <strong>body<br>
        type &mdash; string&#47;regex </strong>
        <br><br>
        The pattern for Rewrite. At least one group should be specified.<br>
        For Example: /rewrite_from/(.*) /rewrite_to/$1 <br>
        Read more about Rewrite option [here](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite).
        </li><hr></ul>

        <ul><li><strong>force_return</strong></li>
        <br>
        Allows to apply custom HTTP code to the CDN content.<br><br>
        Specify HTTP-code you need and text or URL if you're going to set up redirection.<br><br>
        It has the following fields:
        <br><br>

        <strong>сode<br>
        type &mdash; integer </strong>
        <br><ul>
         <li>Minimum value: 100</li>
         <li>Maximum value: 599</li>
        </ul><br>
        <strong>body<br>
        type &mdash; string </strong>
        <br><br>
        Specify the URL for redirection.
        <br><hr></ul>

        <ul><li><strong>country_acl</strong></li>
        <br>
        Control  access to the content for specified countries. <br>
        It has the following fields:

        <br>

        <strong>policy_type<br>
        type &mdash; string </strong>
        <br><br>
        Can be &#34;allow&#34; or &#34;deny&#34;. <br>
        Possible values are:<br>                <ul>
        <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified countries.</li>
        <li><strong>DENY</strong> &mdash; Block access to all except for specified countries.</li>
        </li></ul>

        <br>

        <strong>excepted_values<br>
        type &mdash; array of strings </strong>
        <br><br>
        List of countries according to ISO-3166-1.<br>
        </li><hr></ul>

        <ul><li><strong>user_agent_acl</strong></li>
        <br>
        Control access to the content for specified user-agent. <br>
        It has the following fields:

        <br>

        <strong>policy_type<br>
        type &mdash; string </strong>
        <br><br>
        Can be &#34;allow&#34; or &#34;deny&#34;. <br>
        Possible values are:<br>                <ul>
        <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified User-Agents.</li>
        <li><strong>DENY</strong> &mdash; Block access to all except for specified User-Agents.</li>
        </li></ul>

        <br>

        <strong>excepted_values<br>
        type &mdash; array of strings </strong>
        <br><br>
        List of User-Agent.<br>
        </li><hr></ul>

        <ul><li><strong>ip_address_acl</strong></li>
        <br>
        Control access to the CDN Resource content for specified IP addresses. <br>
        <strong>If you wish to use IPs from our CDN servers IP list for IP ACL configuration, you need to independently monitor its relevance. We recommend you use a script for automatically update IP ACL. [Read more.](#operation--public-ip-list-get) </strong> <br>
        It has the following fields:

        <br>

        <strong>policy_type<br>
        type &mdash; string </strong>
        <br><br>
        Can be &#34;allow&#34; or &#34;deny&#34;. <br>
        Possible values are:<br>                <ul>
        <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified IPs.</li>
        <li><strong>DENY</strong> &mdash; Block access to all except for specified IPs.</li>
        </li></ul>

        <br>

        <strong>excepted_values<br>
        type &mdash; array of strings </strong>
        <br><br>
        List of IPs.<br>
        </li><hr></ul>

        <ul><li><strong>referrer_acl</strong></li>
        <br>
        Control access to the CDN Resource content for specified domain names. <br>
        It has the following fields:

        <br>

        <strong>policy_type<br>
        type &mdash; string </strong>
        <br><br>
        Can be &#34;allow&#34; or &#34;deny&#34;. <br>
        Possible values are:<br>                <ul>
        <li><strong>ALLOW</strong> &mdash; Allow access to all except for specified domain names.</li>
        <li><strong>DENY</strong> &mdash; Block access to all except for specified domain names.</li>
        </li></ul>

        <br>

        <strong>excepted_values<br>
        type &mdash; array of strings </strong>
        <br><br>
        List of domain names.<br>
        </li><hr></ul>

        <ul><li><strong>secure_key</strong></li>
        <br>
        The option allows configuring an access with tokenized URLs. It makes impossible to access content without a valid (unexpired) hash key. <br>
        When enabled you need to specify a key that you use to generate a token. <br>
        It has the following fields:

        <br>

        <strong>key<br>
        type &mdash; string </strong>
        <br><br>
        The key generated on your side which will be used for URL signing. <br>

        <br>

        <strong>type<br>
        type &mdash; integer </strong>
        <br><br>
        Specify the type of URL Signing. It can be either 0 or 2.<br>
        You can use one of the two possible types:<br><ul>
        <li><strong>Type 2</strong> Excludes end users IP from secure token generation.</li>
        <li><strong>Type 0</strong> Includes end users IP to secure token generation.</li>
        </li></ul>
        </li></ul>
        </ul>
"
    example:
      cname: cdn.yoursite.com
      logTarget: "1.2.3.4:1234"
      options: {"allowedHttpMethods": {"enabled": true, "value": ["GET", "POST"]}, "cors": {"enabled": true, "value": ["yourdomain.com", "yourdomain2.com"]}, "fetch_compressed": {"enabled": true, "value": false}, "gzipOn": {"enabled": true, "value": true}, "brotli_compression": {"enabled": true, "value": ["text/html", "text/plain"]}, "redirect_http_to_https": {"enabled": true, "value": true}, "redirect_https_to_http": {"enabled": false, "value": true}, "hostHeader": {"enabled": true, "value": "host.com"}, "edge_cache_settings": {"enabled": true, "value": "43200s", "custom_values": {"100": "43200s"}}, "browser_cache_settings": {"enabled": true, "value": "3600s"}, "forward_host_header": {"enabled": false, "value": false}, "disable_cache": {"enabled": true, "value": false}, "cache_http_headers": {"enabled": false, "value": ["vary", "content-length", "last-modified", "connection", "accept-ranges", "content-type", "content-encoding", "etag", "cache-control", "expires", "keep-alive", "server"]}, "ignore_cookie": {"enabled": true, "value": true}, "ignoreQueryString": {"enabled": true, "value": false}, "query_params_whitelist": null, "query_params_blacklist": null, "proxy_cache_methods_set": {"enabled": true, "value": false}, "disable_proxy_force_ranges": {"enabled": true, "value": true}, "rewrite": {"body": "/(.*) /additional_path/$1", "enabled": true, "flag": "break"}, "force_return": {"enabled": true, "code": 301, "body": "http://example.com/redirect_address"}, "country_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["GB", "DE"]}, "referrer_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["google.com", "*.yandex.ru"]}, "user_agent_acl": {"enabled": true, "policy_type": "allow", "excepted_values": ["UserAgent Value"]}, "ip_address_acl": {"enabled": true, "policy_type": "deny", "excepted_values": ["192.168.1.100/32"]}, "secure_key": {"enabled": true, "key": "mysupersecretkey", "type": 2}, "slice": NULL, "stale": {"enabled": true, "value": ["http_404", "http_500"]}, "staticHeaders": {"enabled": true, "value": {"One_Header": "Value_1", "Two_Header": "Value_2"}}, "staticRequestHeaders": {"enabled": true, "value": {"Header-One": "Value 1", "Header-Two": "Value 2"}}}
      origin: yoursite.com
      originProtocol: HTTPS
      secondaryHostnames: [
        "cdn1.yoursite.com",
        "cdn2.yoursite.com"
      ]
      sslData: 102
      sslEnabled: true

  CreateResource:
    type: object
    properties:
      cname:
        type: string
        description: 'Specify a CNAME that will be used to deliver content though a CDN.'
      originGroup:
        type: integer
        description: "ID of the Origins Group. Use one of your [Origins Group](/#operation--originGroups-get) or [create](/#operation--originGroups-post) a new one. <br><br> You can use either 'origin' parameter or 'originGroup' in the request."
      origin:
        type: string
        description: "A domain name or IP of your origin source. Specify a port if custom.<br><br> You can use either 'origin' parameter or 'originGroup' in the request."
      secondaryHostnames:
        type: array
        description: 'List of additional CNAMEs.'
        items:
          type: string
    example:
      originGroup: 132
      cname: cdn.example.com
      secondaryHostnames: ["1.example.com","2.example.com"]

  ResourcePurge:
    type: object
    properties:
      paths:
        type: array
        description: "There are three different ways to purge CDN files: <br> <ul>  <li><strong>1. Purge all files in a CDN Resource</strong> &mdash; specify empry array &mdash; 'paths':[].</li> <br> <li><strong>2. Wildcard purge</strong> &mdash; for purging by pattern use the &#42; operator, which replaces any number of symbols in your path (you can use several &#42; operators in one request). A path must start with the / or the &#42; symbols. If you don’t specify a query string, files with all of possible query strings will be purged from the cache according to the path pattern.
Example: paths: [ '/statiс/*' ], for example &mdash;  '/images/&#42;', '&#42;/somepath/&#42;', etc, and combine of its &mdash; '&#42;/images/&#42;.jpg', '/pictures/&#42;.png'.</li> <br> <li><strong>3. Purge cache of a chosen file</strong> &mdash; specify a file path without a domain name. If you don’t specify a query string, files with all of possible query strings will be deleted from the cache. Example, '/pics/1.jpg'.</li></ul>"
        items:
          type: string
    required:
      - paths
    example:
      paths: ["/test.jpg", "/statiс/*", "*.png", "*/images/*", "*/pictures/*.jpg"]

  ResourcePrefetch:
    type: object
    properties:
      paths:
        type: array
        description: 'Paths to files that you want to prepopulate to a CDN.'
        items:
          type: string
    required:
      - paths
    example:
      paths: ["/test.jpg", "test1.jpg"]


  ChangeUser:
    type: object
    properties:
      name:
        type: string
        description: 'User name.'
      email:
        type: string
        description: 'User email.'
      groups:
        type: object
        description: 'User rights according Users groups. <br><br> More details about groups and permissions you can find [here](/#operation--clients-me-get).'
      lang:
        type: string
        description: 'Control Panel Language.'
      phone:
        type: object
        description: 'Phone numbers of user.'
    required:
      - name
      - email
    example:
      name: User Name
      email: user@yourcompany.com
      groups: [{id: 5, name: Users}]
      lang: en
      phone: ["111","222","333"]

  InviteUser:
    type: object
    properties:
      email:
        type: string
        description: 'User email.'
    required:
      - email
    example:
      email: user@yourcompany.com


  GetSeriesResponse:
    type: object
    properties:
      resource:
        type: object
        description: "Object contains statistics information grouped by resources’ IDs."
      1 (example):
        type: object
        description: "Value represents resource ID, contains statistics data for a resource."
      region:
        type: object
        description: "Object contains data about traffic volume grouped by CDN edge servers’ location (regions):<br/>
                      <ul>
                        <li>
                          asia – Asia
                        </li>
                        <li>
                          au – Australia
                        </li>
                        <li>
                          cis – CIS (Commonwealth of Independent States)
                        </li>
                        <li>
                          eu – Europe
                        </li>
                        <li>
                          latam – Latin America
                        </li>
                        <li>
                          me – Middle East
                        </li>
                        <li>
                          na – North America.
                        </li>
                      </ul>"
      metrics:
        type: object
        description: "Object contains statistics parameters."
      upstream_bytes:
        type: array
        items:
          type: integer
        description: "Bytes from the upstream to the CDN servers.<br />
                      Represented by two values, for example:
                      <ul>
                        <li>
                          1543622400 — time in the UNIX timestamp when statistics were received.
                        </li>
                        <li>
                          17329220573 — bytes.
                        </li>
                      </ul>"
      sent_bytes:
        type: array
        items:
          type: integer
        description: "Bytes from CDN servers to the end-users.<br />
                      Represented by two values, for example:
                      <ul>
                        <li>
                          1543622400 — time in the UNIX timestamp when statistics were received.
                        </li>
                        <li>
                          17329220573 — bytes.
                        </li>
                      </ul>"
      total_bytes:
        type: array
        items:
          type: integer
        description: "Upstream bytes and sent_bytes combined.<br />
                      Represented by two values, for example:
                      <ul>
                        <li>
                          1543622400 — time in the UNIX timestamp when statistics were received.
                        </li>
                        <li>
                          17329220573— bytes.
                        </li>
                      </ul>"
      shield_usage:
        type: array
        items:
          type: object
        description: "Each object contains the following parameters:
                      <ul>
                        <li>
                          active_from – the date and time the shield was activated
                        </li>
                        <li>
                          active_to – the date and time the shield was stopped
                        </li>
                        <li>
                          client_id – client ID
                        </li>
                        <li>
                          cname – CDN Resource first created alias
                        </li>
                      </ul>"

    example:
      {
        "resource": {
          "1": {
            "region": {
              "asia": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    17329220573
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    17384617989
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    55397416
                  ]
                  ]
                }
              },
              "cis": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    234582406061
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    234677982848
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    95576787
                  ]
                  ]
                }
              },
              "eu": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    243212514764
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    243297296511
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    84781747
                  ]
                  ]
                }
              },
              "latam": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    59819837564
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    59927133387
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    107295823
                  ]
                  ]
                }
              },
              "me": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    13643432427
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    13644762375
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    1329948
                  ]
                  ]
                }
              },
              "na": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    234004049506
                  ]
                  ],
                  "total_bytes": [
                  [
                    1543622400,
                    234655863540
                  ]
                  ],
                  "upstream_bytes": [
                  [
                    1543622400,
                    651814034
                  ]
                  ]
                }
              }
            }
          },
          "4777": {
            "region": {
              "au": {
                "metrics": {
                  "sent_bytes": [
                  [
                    1543622400,
                    490800672
                  ]
                  ],
                }
              }
            }
          }
        }
      }

  GetAggregatedCDNStatisticsResponse:
    type: object
    properties:
      resource:
        type: object
        description: "Object contains statistics information grouped by resources’ IDs"
      1 (example):
        type: object
        description: "Value represents a resource ID, contains statistics data for a resource"
      region:
        type: object
        description: "Object contains statistics information grouped by regions"
      cis (example):
        type: object
        description: "Value represents a region, contains statistics data for a region"
      metrics:
        type: object
        description: "Object contains statistics parameters"
      upstream_bytes:
        type: integer
        description: "Traffic in bytes from the upstream to CDN servers"
      sent_bytes:
        type: integer
        description: "Traffic in bytes from CDN servers to clients"
      total_bytes:
        type: integer
        description: "Upstream bytes and sent_bytes combined"
      requests:
        type: integer
        description: "The number of requests to edge servers"
      responses_2xx:
        type: integer
        description: "The number of 2xx response codes"
      responses_3xx:
        type: integer
        description: "The number of 3xx response codes"
      responses_4xx:
        type: integer
        description: "The number of 4xx response codes"
      responses_5xx:
        type: integer
        description: "The number of 5xx response codes"
      responses_hit:
        type: integer
        description: "The number of responses with the header Cache: HIT"
      responses_miss:
        type: integer
        description: "The number of responses with the header Cache: MISS"
      cache_hit_traffic_ratio:
        type: integer
        description: "The formula: 1 - upstream_bytes / sent_bytes. We deduct the non-cached traffic from the total traffic amount"
      95_percentile:
        type: integer
        description: "95 percentile bandwidth value"
      min_bandwidth:
        type: integer
        description: "Minimum bandwidth"
      max_bandwidth:
        type: integer
        description: "Maximum bandwidth"
    example:
      {
        "resource": {
          "1": {
            "region": {
              "cis": {
                "metrics": {
                  "95_percentile": 20023536,
                  "cache_hit_traffic_ratio": 0.9958449964158854,
                  "max_bandwidth": 34794756,
                  "min_bandwidth": 379257,
                  "requests": 21575631,
                  "responses_2xx": 21095299,
                  "responses_3xx": 278225,
                  "responses_4xx": 202026,
                  "responses_5xx": 81,
                  "sent_bytes": 22014089592053,
                  "total_bytes": 22105558213209,
                  "upstream_bytes": 91468621156,
                  "responses_hit": 63368252,
                  "responses_miss": 866237
                }
              },
              "eu": {
                "metrics": {
                  "95_percentile": 14324356,
                  "cache_hit_traffic_ratio": 0.9852247660029627,
                  "max_bandwidth": 22215199,
                  "min_bandwidth": 299608,
                  "requests": 64234595,
                  "responses_2xx": 62616980,
                  "responses_3xx": 1196666,
                  "responses_4xx": 420718,
                  "responses_5xx": 216,
                  "sent_bytes": 16552226067556,
                  "total_bytes": 16796789080876,
                  "upstream_bytes": 244563013320,
                  "responses_hit": 21235829,
                  "responses_miss": 339566
                }
              }
            }
          }
        }
      }

  GetAggregatedVPStatisticsResponse:
    type: object
    properties:
      metrics:
        type: object
        description: "Object contains statistics parameters"
      streams:
        type: integer
        description: "The total time spent on transcoding in minutes"
      max_size:
        type: integer
        description: "The maximum VOD storage usage"
    example:
      {
        "metrics": {
          "streams": 1300550,
          "max_size": 50982366775
        }
      }


  GetRawLogs:
    type: object
    properties:
      client:
        type: integer
        description: "Client ID."
      storage_type:
        type: string
        description: "Type of storage."
      enabled:
        type: boolean
        description: "Shows if the service is active or not:
                      <ul>
                        <li>
                          <strong>True</strong> – the service is active
                        </li>
                        <li>
                          <strong>False</strong> – the service has been stopped by client.
                        </li>
                      </ul>"
      for_all_resources:
        type: boolean
        description: "Indicates the number of folders used for log delivery:
                      <ul>
                        <li>
                          <strong>True</strong> – logs for all resources are delivered to one folder
                        </li>
                        <li>
                          <strong>False</strong> – logs are delivered to separate folders.
                        </li>
                      </ul>"
      all_resources_folder:
        type: string
        description: "Name of the folder for log delivery.<br />
                      <em>Occupied if for_all_resources is true.</em>"
      s3_type:
        type: string
        description: "S3 type.<br />
                      <em>Occupied if storage_type is S3.</em>"
      s3_aws_region:
        type: string
        description: "[Amazon region](#operation--aws_regions-get)."
      s3_hostname:
        type: string
        description: "S3 hostname."
      s3_host_bucket:
        type: string
        description: "Bucket hostname.<br />
                      <em>Occupied if storage_type is S3.</em>"
      s3_bucket_location:
        type: string
        description: "Location of storage.<br />
                      <em>Occupied if storage_type is S3.</em>"
      ftp_hostname:
        type: string
        description: "FTP hostname."
      s3_access_key_id:
        type: string
        description: "S3 access key ID."
      ftp_login:
        type: string
        description: "FTP login."
      ftp_prepend_folder:
        type: string
        description: "Prepend folder for log delivery.<br />
                      <em>Occupied if storage_type is FTP.</em>"
      folders:
        type: array
        items:
          type: object
        description: "List of folders/buckets to receive logs for CDN resources.<br />
                      Includes the following:
                      <ul>
                        <li>
                          <strong>ID</strong><br />
                          <strong>type – string</strong><br />
                          folder ID
                        </li>
                        <li>
                          <strong>folder</strong><br />
                          <strong>type – string</strong><br />
                          folder/bucket name
                        </li>
                        <li>
                          <strong>cdn_resource</strong><br />
                          <strong>type – integer</strong><br />
                          CDN resource ID.
                        </li>
                      </ul>"
      status:
        type: string
        description: "Log delivery status:
                      <ul>
                        <li>
                          <strong>OK</strong> – the delivery of all/part of the logs is successful
                        </li>
                        <li>
                          <strong>failed</strong> – all attempts to deliver logs have failed.
                        </li>
                      </ul>"
    example:
      {
        "id": 123,
        "enabled": true,
        "storage_type": "s3",
        "client": 1,
        "created": "2018-07-23T13:27:01.047356Z",
        "updated": "2018-07-23T13:33:44.229959Z",
        "for_all_resources": true,
        "all_resources_folder": "folderall",
        "s3_type": "amazon ",
        "s3_host_bucket": null,
        "s3_bucket_location": null,
        "s3_hostname": null,
        "s3_access_key_id": "AJKHGJDKHFG",
        "s3_aws_region": 1,
        "status": "ok ",
        "folders": []
      }

  SetupRawLogs:
    type: object
    properties:
      storage_type*:
        type: string
        description: "Type of storage. Possible values:
                      <ul>
                        <li>
                          <strong>s3</strong>
                        </li>
                        <li>
                          <strong>ftp</strong>
                        </li>
                      </ul>"
      for_all_resources*:
        type: boolean
        description: "Indicates the number of folders used for log delivery:
                      <ul>
                        <li>
                          <strong>True</strong> – logs for all resources are delivered to one folder
                        </li>
                        <li>
                          <strong>False</strong> – logs are delivered to separate folders.
                        </li>
                      </ul>"
      all_resources_folder*:
        type: string
        description: "<em>Required if for_all_resources is true.</em><br />
                      Name of the folder for log delivery."
      folders*:
        type: object
        items:
          type: array
        description: "<em>Required if for_all_resources is false.</em><br />
                      List of folders/buckets to receive logs for CDN resources.
                      Specify the following:
                      <ul>
                        <li>
                          <strong>folder</strong><br />
                          <strong>type – string</strong><br />
                          folder/bucket name
                        </li>
                        <li>
                          <strong>cdn_resource</strong><br />
                          <strong>type – integer</strong><br />
                          CDN resource ID.
                        </li>
                      </ul>"
      s3_type*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 type.<br />
                      Possible values:
                      <ul>
                        <li>
                          <strong>amazon</strong> – amazon s3 storage
                        </li>
                        <li>
                          <strong>other</strong> – non-amazon s3 storage
                        </li>
                      </ul>"
      s3_aws_region:
        type: integer
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      [Amazon region](#operation--aws_regions-get)."
      s3_access_key_id*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 Access key ID."
      s3_secret_key*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 Access key."
      s3_hostname*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      <em>Required if s3_type is other.</em><br />
                      S3 hostname (without protocol or any additional formatting)."
      s3_host_bucket:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      Bucket hostname (without protocol or any additional formatting)."
      s3_bucket_location:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      Location of storage."
      ftp_hostname*:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP hostname (without protocol or any additional formatting)."
      ftp_prepend_folder:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      Name of the prepend folder for log delivery.<br />
                      Null is allowed."
      ftp_login*:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP login."
      ftp_password*:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP password."
    required:
      - storage_type*
      - for_all_resources*
      - all_resources_folder*
      - folders*
      - s3_type*
      - s3_access_key_id*
      - s3_secret_key*
      - s3_hostname*
      - ftp_hostname*
      - ftp_login*
      - ftp_password*
    example:
      {
        "storage_type": "ftp",
        "for_all_resources": false,
        "all_resources_folder": null,
        "ftp_hostname": "hostname.com",
        "ftp_prepend_folder": null,
        "ftp_login": "mylogin",
        "ftp_password": "strongpassword",
        "folders": [
        {
          "folder": "res123",
          "cdn_resource": 123
        },
        {
          "folder": "res124",
          "cdn_resource": 124
        },
        ]
      }
  ChangeRawLogs:
    type: object
    properties:
      storage_type*:
        type: string
        description: "Type of storage. Possible values:
                      <ul>
                        <li>
                          <strong>s3</strong>
                        </li>
                        <li>
                          <strong>ftp</strong>
                        </li>
                      </ul>"
      for_all_resources*:
        type: boolean
        description: "Indicates the number of folders used for log delivery:
                      <ul>
                        <li>
                          <strong>True</strong> – logs for all resources are delivered to one folder
                        </li>
                        <li>
                          <strong>False</strong> – logs are delivered to separate folders.
                        </li>
                      </ul>"
      all_resources_folder*:
        type: string
        description: "<em>Required if for_all_resources is true.</em><br />
                      Name of the folder for log delivery."
      folders*:
        type: object
        items:
          type: array
        description: "<em>Required if for_all_resources is false.</em><br />
                      List of folders/buckets to receive logs for CDN resources.
                      Specify the following:
                      <ul>
                        <li>
                          <strong>folder</strong><br />
                          <strong>type – string</strong><br />
                          folder/bucket name
                        </li>
                        <li>
                          <strong>cdn_resource</strong><br />
                          <strong>type – integer</strong><br />
                          CDN resource ID.
                        </li>
                      </ul>"
      s3_type*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 type.<br />
                      Possible values:
                      <ul>
                        <li>
                          <strong>amazon</strong> – amazon s3 storage
                        </li>
                        <li>
                          <strong>other</strong> – non-amazon s3 storage
                        </li>
                      </ul>"
      s3_aws_region:
        type: integer
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      [Amazon region](#operation--aws_regions-get)."
      s3_access_key_id*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 Access key ID."
      s3_secret_key:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      S3 Access key.<br />
                      <em>Not a required filed if previously setup.</em>"
      s3_hostname*:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      <em>Required if s3_type is other.</em><br />
                      S3 hostname (without protocol or any additional formatting)."
      s3_host_bucket:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      Bucket hostname (without protocol or any additional formatting)."
      s3_bucket_location:
        type: string
        description: "<em>The parameter is used for s3 storage_type</em><br/>
                      Location of storage."
      ftp_hostname*:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP hostname (without protocol or any additional formatting)."
      ftp_prepend_folder:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      Name of the prepend folder for log delivery.<br />
                      Null is allowed."
      ftp_login*:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP login."
      ftp_password:
        type: string
        description: "<em>The parameter is used for ftp storage_type</em><br/>
                      FTP password.<br />
                      <em>Not a required filed if previously setup.</em>"
    required:
      - storage_type*
      - for_all_resources*
      - all_resources_folder*
      - folders*
      - s3_type*
      - s3_access_key_id*
      - s3_hostname*
      - ftp_hostname*
      - ftp_login*
    example:
      {
        "storage_type": "s3",
        "for_all_resources": false,
        "all_resources_folder": null,
        "s3_type": "amazon",
        "s3_aws_region": 1,
        "s3_hostname": null,
        "s3_access_key_id": "AJKHGJDKHFG",
        "s3_host_bucket": null,
        "s3_bucket_location": null,
        "folders": [
        {
          "folder": "first",
          "cdn_resource": 111
        },
        {
          "folder": "second",
          "cdn_resource": 222

        },
        ]
      }

  GetAwsRegionsResponse:
    type: object
    properties:
      id:
        type: integer
        description: "Region ID."
      code:
        type: string
        description: "Region code."
      name:
        type: string
        description: "Region name."
    example:
      [
      {
        "id": 1,
        "code": "us-east-1",
        "name": "US East (N. Virginia)"
      },
      {
        "id": 2,
        "code": "us-east-2",
        "name": "US East (Ohio)"
      }
      ]

  InviteUserResponse:
    type: object
    properties:
      status:
        type: string
        description: 'The user has been created, an invitation has been sent to the user'
      user_id:
        type: integer
        description: 'The id of the newly-created user'
    example: [{
                status: 'sent',
                user_id: 20
              }]

  GetOriginShielding:
    type: object
    properties:
      shielding_pop:
        type: integer
        description: "Returns null when Origin shielding is disabled, otherwise returns shielding location ID."

  ChangeOriginShieldingRequest:
    type: object
    properties:
      shielding_pop:
        type: integer
        description: "To disable Origin shielding set null.<br/>
                        To enable Origin shielding set Origin shielding location ID."

    example:
      shielding_pop: 4

  GetShieldingPOPV2:
    type: object
    properties:
      id:
        type: integer
        description: "Origin shielding location ID."
      datacenter:
        type: string
        description: "Name of Origin shielding location datacenter."
      country:
        type: string
        description: "Country of Origin shielding location."
      city:
        type: string
        description: "City of Origin shielding location."

securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
    description: '<a href="https://control.gcdn.co/#/signup">Sign up</a> to get access to our API. <br><br>
    The majority of methods require an API token in the Authorization header.
    An API token is a unique key that all users and applications should add to requests to interact with our services. <br><br>
    The token will be provided upon [Login (new)](https://apidocs.gcorelabs.com/cdn#tag/Account/paths/~1auth~1jwt~1login/post) request.
    You can send this request no more than 5 times per second.
    In addition to authentication, the API checks if the user is authorized to perform the requested action. <br><br>
    In the response you will get two tokens: access and refresh.
    To manage services add your access token after Bearer in the authorization header like this: <br><br>
    Authorization: Bearer eyJ0eXAiOiJKV'
